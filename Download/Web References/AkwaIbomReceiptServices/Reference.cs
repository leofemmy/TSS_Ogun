//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Download.AkwaIbomReceiptServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReceiptServiceSoap", Namespace="http://microsoft.com/webservices/")]
    public partial class ReceiptService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataCentralOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateCentralOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadStationPrintedReceiptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadIssueReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataIssueReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateIssueReceiptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogReceiptsReprintRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogReceiptsReprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptReprintApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReceiptReprintApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSplitCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiptRequestLog_OnDemandOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceipt_OnDemandOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptUpdate_OnDemandOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReceiptService() {
            this.Url = global::Download.Properties.Settings.Default.Download_AkwaIbomReceiptServices_ReceiptService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadDataCompletedEventHandler UploadDataCompleted;
        
        /// <remarks/>
        public event DownloadDataCompletedEventHandler DownloadDataCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateCompletedEventHandler DownloadDataUpdateCompleted;
        
        /// <remarks/>
        public event DownloadDataCentralCompletedEventHandler DownloadDataCentralCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateCentralCompletedEventHandler DownloadDataUpdateCentralCompleted;
        
        /// <remarks/>
        public event UploadStationPrintedReceiptsCompletedEventHandler UploadStationPrintedReceiptsCompleted;
        
        /// <remarks/>
        public event uploadIssueReceiptCompletedEventHandler uploadIssueReceiptCompleted;
        
        /// <remarks/>
        public event DownloadDataIssueReceiptCompletedEventHandler DownloadDataIssueReceiptCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateIssueReceiptsCompletedEventHandler DownloadDataUpdateIssueReceiptsCompleted;
        
        /// <remarks/>
        public event LogReceiptsReprintRequestCompletedEventHandler LogReceiptsReprintRequestCompleted;
        
        /// <remarks/>
        public event LogReceiptsReprintCompletedEventHandler LogReceiptsReprintCompleted;
        
        /// <remarks/>
        public event GetReceiptReprintApprovedCompletedEventHandler GetReceiptReprintApprovedCompleted;
        
        /// <remarks/>
        public event UpdateReceiptReprintApprovedCompletedEventHandler UpdateReceiptReprintApprovedCompleted;
        
        /// <remarks/>
        public event SplitCollectionCompletedEventHandler SplitCollectionCompleted;
        
        /// <remarks/>
        public event UpdateSplitCollectionCompletedEventHandler UpdateSplitCollectionCompleted;
        
        /// <remarks/>
        public event getPayerInfoCompletedEventHandler getPayerInfoCompleted;
        
        /// <remarks/>
        public event ReceiptRequestLog_OnDemandCompletedEventHandler ReceiptRequestLog_OnDemandCompleted;
        
        /// <remarks/>
        public event GetSingleReceiptCompletedEventHandler GetSingleReceiptCompleted;
        
        /// <remarks/>
        public event GetReceipt_OnDemandCompletedEventHandler GetReceipt_OnDemandCompleted;
        
        /// <remarks/>
        public event GetReceiptUpdate_OnDemandCompletedEventHandler GetReceiptUpdate_OnDemandCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UploadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UploadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("UploadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.UploadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void UploadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.UploadDataOperationCompleted == null)) {
                this.UploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDataOperationCompleted);
            }
            this.InvokeAsync("UploadData", new object[] {
                        dataSet,
                        statecode}, this.UploadDataOperationCompleted, userState);
        }
        
        private void OnUploadDataOperationCompleted(object arg) {
            if ((this.UploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDataCompleted(this, new UploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataOperationCompleted == null)) {
                this.DownloadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataOperationCompleted);
            }
            this.InvokeAsync("DownloadData", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataOperationCompleted, userState);
        }
        
        private void OnDownloadDataOperationCompleted(object arg) {
            if ((this.DownloadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataCompleted(this, new DownloadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdate", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdate(System.Data.DataSet dataSet, string stationCode) {
            object[] results = this.Invoke("DownloadDataUpdate", new object[] {
                        dataSet,
                        stationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateAsync(System.Data.DataSet dataSet, string stationCode) {
            this.DownloadDataUpdateAsync(dataSet, stationCode, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateAsync(System.Data.DataSet dataSet, string stationCode, object userState) {
            if ((this.DownloadDataUpdateOperationCompleted == null)) {
                this.DownloadDataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdate", new object[] {
                        dataSet,
                        stationCode}, this.DownloadDataUpdateOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateCompleted(this, new DownloadDataUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataCentral", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataCentral(string statecode) {
            object[] results = this.Invoke("DownloadDataCentral", new object[] {
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataCentralAsync(string statecode) {
            this.DownloadDataCentralAsync(statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataCentralAsync(string statecode, object userState) {
            if ((this.DownloadDataCentralOperationCompleted == null)) {
                this.DownloadDataCentralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataCentralOperationCompleted);
            }
            this.InvokeAsync("DownloadDataCentral", new object[] {
                        statecode}, this.DownloadDataCentralOperationCompleted, userState);
        }
        
        private void OnDownloadDataCentralOperationCompleted(object arg) {
            if ((this.DownloadDataCentralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataCentralCompleted(this, new DownloadDataCentralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdateCentral", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdateCentral(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadDataUpdateCentral", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateCentralAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataUpdateCentralAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateCentralAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataUpdateCentralOperationCompleted == null)) {
                this.DownloadDataUpdateCentralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateCentralOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdateCentral", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataUpdateCentralOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateCentralOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateCentralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateCentralCompleted(this, new DownloadDataUpdateCentralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UploadStationPrintedReceipts", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UploadStationPrintedReceipts(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("UploadStationPrintedReceipts", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UploadStationPrintedReceiptsAsync(System.Data.DataSet dataSet, string statecode) {
            this.UploadStationPrintedReceiptsAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void UploadStationPrintedReceiptsAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.UploadStationPrintedReceiptsOperationCompleted == null)) {
                this.UploadStationPrintedReceiptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadStationPrintedReceiptsOperationCompleted);
            }
            this.InvokeAsync("UploadStationPrintedReceipts", new object[] {
                        dataSet,
                        statecode}, this.UploadStationPrintedReceiptsOperationCompleted, userState);
        }
        
        private void OnUploadStationPrintedReceiptsOperationCompleted(object arg) {
            if ((this.UploadStationPrintedReceiptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadStationPrintedReceiptsCompleted(this, new UploadStationPrintedReceiptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/uploadIssueReceipt", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet uploadIssueReceipt(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("uploadIssueReceipt", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void uploadIssueReceiptAsync(System.Data.DataSet dataSet, string statecode) {
            this.uploadIssueReceiptAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void uploadIssueReceiptAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.uploadIssueReceiptOperationCompleted == null)) {
                this.uploadIssueReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadIssueReceiptOperationCompleted);
            }
            this.InvokeAsync("uploadIssueReceipt", new object[] {
                        dataSet,
                        statecode}, this.uploadIssueReceiptOperationCompleted, userState);
        }
        
        private void OnuploadIssueReceiptOperationCompleted(object arg) {
            if ((this.uploadIssueReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadIssueReceiptCompleted(this, new uploadIssueReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataIssueReceipt", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataIssueReceipt(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadDataIssueReceipt", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataIssueReceiptAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataIssueReceiptAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataIssueReceiptAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataIssueReceiptOperationCompleted == null)) {
                this.DownloadDataIssueReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataIssueReceiptOperationCompleted);
            }
            this.InvokeAsync("DownloadDataIssueReceipt", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataIssueReceiptOperationCompleted, userState);
        }
        
        private void OnDownloadDataIssueReceiptOperationCompleted(object arg) {
            if ((this.DownloadDataIssueReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataIssueReceiptCompleted(this, new DownloadDataIssueReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdateIssueReceipts", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdateIssueReceipts(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadDataUpdateIssueReceipts", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateIssueReceiptsAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataUpdateIssueReceiptsAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateIssueReceiptsAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataUpdateIssueReceiptsOperationCompleted == null)) {
                this.DownloadDataUpdateIssueReceiptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateIssueReceiptsOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdateIssueReceipts", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataUpdateIssueReceiptsOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateIssueReceiptsOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateIssueReceiptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateIssueReceiptsCompleted(this, new DownloadDataUpdateIssueReceiptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/LogReceiptsReprintRequest", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LogReceiptsReprintRequest(string ICMAeReceipts, string PaymentRefNumber, string ControlNumber, string RequestSentBy, string ReasonForRequest, string ReprintType, string NewRevCode, string NewRevName, string NewAgencyCode, string NewAgencyName, string NewPayerName, string NewPayerAddress, string StationCode) {
            object[] results = this.Invoke("LogReceiptsReprintRequest", new object[] {
                        ICMAeReceipts,
                        PaymentRefNumber,
                        ControlNumber,
                        RequestSentBy,
                        ReasonForRequest,
                        ReprintType,
                        NewRevCode,
                        NewRevName,
                        NewAgencyCode,
                        NewAgencyName,
                        NewPayerName,
                        NewPayerAddress,
                        StationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LogReceiptsReprintRequestAsync(string ICMAeReceipts, string PaymentRefNumber, string ControlNumber, string RequestSentBy, string ReasonForRequest, string ReprintType, string NewRevCode, string NewRevName, string NewAgencyCode, string NewAgencyName, string NewPayerName, string NewPayerAddress, string StationCode) {
            this.LogReceiptsReprintRequestAsync(ICMAeReceipts, PaymentRefNumber, ControlNumber, RequestSentBy, ReasonForRequest, ReprintType, NewRevCode, NewRevName, NewAgencyCode, NewAgencyName, NewPayerName, NewPayerAddress, StationCode, null);
        }
        
        /// <remarks/>
        public void LogReceiptsReprintRequestAsync(string ICMAeReceipts, string PaymentRefNumber, string ControlNumber, string RequestSentBy, string ReasonForRequest, string ReprintType, string NewRevCode, string NewRevName, string NewAgencyCode, string NewAgencyName, string NewPayerName, string NewPayerAddress, string StationCode, object userState) {
            if ((this.LogReceiptsReprintRequestOperationCompleted == null)) {
                this.LogReceiptsReprintRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogReceiptsReprintRequestOperationCompleted);
            }
            this.InvokeAsync("LogReceiptsReprintRequest", new object[] {
                        ICMAeReceipts,
                        PaymentRefNumber,
                        ControlNumber,
                        RequestSentBy,
                        ReasonForRequest,
                        ReprintType,
                        NewRevCode,
                        NewRevName,
                        NewAgencyCode,
                        NewAgencyName,
                        NewPayerName,
                        NewPayerAddress,
                        StationCode}, this.LogReceiptsReprintRequestOperationCompleted, userState);
        }
        
        private void OnLogReceiptsReprintRequestOperationCompleted(object arg) {
            if ((this.LogReceiptsReprintRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogReceiptsReprintRequestCompleted(this, new LogReceiptsReprintRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/LogReceiptsReprint", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LogReceiptsReprint(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("LogReceiptsReprint", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LogReceiptsReprintAsync(System.Data.DataSet dataSet, string statecode) {
            this.LogReceiptsReprintAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void LogReceiptsReprintAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.LogReceiptsReprintOperationCompleted == null)) {
                this.LogReceiptsReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogReceiptsReprintOperationCompleted);
            }
            this.InvokeAsync("LogReceiptsReprint", new object[] {
                        dataSet,
                        statecode}, this.LogReceiptsReprintOperationCompleted, userState);
        }
        
        private void OnLogReceiptsReprintOperationCompleted(object arg) {
            if ((this.LogReceiptsReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogReceiptsReprintCompleted(this, new LogReceiptsReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetReceiptReprintApproved", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReceiptReprintApproved(string StationCode) {
            object[] results = this.Invoke("GetReceiptReprintApproved", new object[] {
                        StationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptReprintApprovedAsync(string StationCode) {
            this.GetReceiptReprintApprovedAsync(StationCode, null);
        }
        
        /// <remarks/>
        public void GetReceiptReprintApprovedAsync(string StationCode, object userState) {
            if ((this.GetReceiptReprintApprovedOperationCompleted == null)) {
                this.GetReceiptReprintApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptReprintApprovedOperationCompleted);
            }
            this.InvokeAsync("GetReceiptReprintApproved", new object[] {
                        StationCode}, this.GetReceiptReprintApprovedOperationCompleted, userState);
        }
        
        private void OnGetReceiptReprintApprovedOperationCompleted(object arg) {
            if ((this.GetReceiptReprintApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptReprintApprovedCompleted(this, new GetReceiptReprintApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UpdateReceiptReprintApproved", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateReceiptReprintApproved(System.Data.DataSet PayRefs) {
            object[] results = this.Invoke("UpdateReceiptReprintApproved", new object[] {
                        PayRefs});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReceiptReprintApprovedAsync(System.Data.DataSet PayRefs) {
            this.UpdateReceiptReprintApprovedAsync(PayRefs, null);
        }
        
        /// <remarks/>
        public void UpdateReceiptReprintApprovedAsync(System.Data.DataSet PayRefs, object userState) {
            if ((this.UpdateReceiptReprintApprovedOperationCompleted == null)) {
                this.UpdateReceiptReprintApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReceiptReprintApprovedOperationCompleted);
            }
            this.InvokeAsync("UpdateReceiptReprintApproved", new object[] {
                        PayRefs}, this.UpdateReceiptReprintApprovedOperationCompleted, userState);
        }
        
        private void OnUpdateReceiptReprintApprovedOperationCompleted(object arg) {
            if ((this.UpdateReceiptReprintApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReceiptReprintApprovedCompleted(this, new UpdateReceiptReprintApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SplitCollection", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SplitCollection(System.Data.DataSet dataSet, string ParentRefNumber, string ParentUTIN, string type, string stationcode) {
            object[] results = this.Invoke("SplitCollection", new object[] {
                        dataSet,
                        ParentRefNumber,
                        ParentUTIN,
                        type,
                        stationcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SplitCollectionAsync(System.Data.DataSet dataSet, string ParentRefNumber, string ParentUTIN, string type, string stationcode) {
            this.SplitCollectionAsync(dataSet, ParentRefNumber, ParentUTIN, type, stationcode, null);
        }
        
        /// <remarks/>
        public void SplitCollectionAsync(System.Data.DataSet dataSet, string ParentRefNumber, string ParentUTIN, string type, string stationcode, object userState) {
            if ((this.SplitCollectionOperationCompleted == null)) {
                this.SplitCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitCollectionOperationCompleted);
            }
            this.InvokeAsync("SplitCollection", new object[] {
                        dataSet,
                        ParentRefNumber,
                        ParentUTIN,
                        type,
                        stationcode}, this.SplitCollectionOperationCompleted, userState);
        }
        
        private void OnSplitCollectionOperationCompleted(object arg) {
            if ((this.SplitCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitCollectionCompleted(this, new SplitCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UpdateSplitCollection", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateSplitCollection(System.Data.DataSet dataSet) {
            object[] results = this.Invoke("UpdateSplitCollection", new object[] {
                        dataSet});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSplitCollectionAsync(System.Data.DataSet dataSet) {
            this.UpdateSplitCollectionAsync(dataSet, null);
        }
        
        /// <remarks/>
        public void UpdateSplitCollectionAsync(System.Data.DataSet dataSet, object userState) {
            if ((this.UpdateSplitCollectionOperationCompleted == null)) {
                this.UpdateSplitCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSplitCollectionOperationCompleted);
            }
            this.InvokeAsync("UpdateSplitCollection", new object[] {
                        dataSet}, this.UpdateSplitCollectionOperationCompleted, userState);
        }
        
        private void OnUpdateSplitCollectionOperationCompleted(object arg) {
            if ((this.UpdateSplitCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSplitCollectionCompleted(this, new UpdateSplitCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/getPayerInfo", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getPayerInfo(string utin, string name, string searchtype) {
            object[] results = this.Invoke("getPayerInfo", new object[] {
                        utin,
                        name,
                        searchtype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getPayerInfoAsync(string utin, string name, string searchtype) {
            this.getPayerInfoAsync(utin, name, searchtype, null);
        }
        
        /// <remarks/>
        public void getPayerInfoAsync(string utin, string name, string searchtype, object userState) {
            if ((this.getPayerInfoOperationCompleted == null)) {
                this.getPayerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayerInfoOperationCompleted);
            }
            this.InvokeAsync("getPayerInfo", new object[] {
                        utin,
                        name,
                        searchtype}, this.getPayerInfoOperationCompleted, userState);
        }
        
        private void OngetPayerInfoOperationCompleted(object arg) {
            if ((this.getPayerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayerInfoCompleted(this, new getPayerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/ReceiptRequestLog_OnDemand", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReceiptRequestLog_OnDemand(string paymentrefnumber, string stationcode, string sentby) {
            object[] results = this.Invoke("ReceiptRequestLog_OnDemand", new object[] {
                        paymentrefnumber,
                        stationcode,
                        sentby});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiptRequestLog_OnDemandAsync(string paymentrefnumber, string stationcode, string sentby) {
            this.ReceiptRequestLog_OnDemandAsync(paymentrefnumber, stationcode, sentby, null);
        }
        
        /// <remarks/>
        public void ReceiptRequestLog_OnDemandAsync(string paymentrefnumber, string stationcode, string sentby, object userState) {
            if ((this.ReceiptRequestLog_OnDemandOperationCompleted == null)) {
                this.ReceiptRequestLog_OnDemandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiptRequestLog_OnDemandOperationCompleted);
            }
            this.InvokeAsync("ReceiptRequestLog_OnDemand", new object[] {
                        paymentrefnumber,
                        stationcode,
                        sentby}, this.ReceiptRequestLog_OnDemandOperationCompleted, userState);
        }
        
        private void OnReceiptRequestLog_OnDemandOperationCompleted(object arg) {
            if ((this.ReceiptRequestLog_OnDemandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiptRequestLog_OnDemandCompleted(this, new ReceiptRequestLog_OnDemandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetSingleReceipt", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSingleReceipt(string paymentrefnumber) {
            object[] results = this.Invoke("GetSingleReceipt", new object[] {
                        paymentrefnumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleReceiptAsync(string paymentrefnumber) {
            this.GetSingleReceiptAsync(paymentrefnumber, null);
        }
        
        /// <remarks/>
        public void GetSingleReceiptAsync(string paymentrefnumber, object userState) {
            if ((this.GetSingleReceiptOperationCompleted == null)) {
                this.GetSingleReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleReceiptOperationCompleted);
            }
            this.InvokeAsync("GetSingleReceipt", new object[] {
                        paymentrefnumber}, this.GetSingleReceiptOperationCompleted, userState);
        }
        
        private void OnGetSingleReceiptOperationCompleted(object arg) {
            if ((this.GetSingleReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleReceiptCompleted(this, new GetSingleReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetReceipt_OnDemand", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReceipt_OnDemand(string stationcode) {
            object[] results = this.Invoke("GetReceipt_OnDemand", new object[] {
                        stationcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceipt_OnDemandAsync(string stationcode) {
            this.GetReceipt_OnDemandAsync(stationcode, null);
        }
        
        /// <remarks/>
        public void GetReceipt_OnDemandAsync(string stationcode, object userState) {
            if ((this.GetReceipt_OnDemandOperationCompleted == null)) {
                this.GetReceipt_OnDemandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceipt_OnDemandOperationCompleted);
            }
            this.InvokeAsync("GetReceipt_OnDemand", new object[] {
                        stationcode}, this.GetReceipt_OnDemandOperationCompleted, userState);
        }
        
        private void OnGetReceipt_OnDemandOperationCompleted(object arg) {
            if ((this.GetReceipt_OnDemandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceipt_OnDemandCompleted(this, new GetReceipt_OnDemandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetReceiptUpdate_OnDemand", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReceiptUpdate_OnDemand(System.Data.DataSet dataSet) {
            object[] results = this.Invoke("GetReceiptUpdate_OnDemand", new object[] {
                        dataSet});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptUpdate_OnDemandAsync(System.Data.DataSet dataSet) {
            this.GetReceiptUpdate_OnDemandAsync(dataSet, null);
        }
        
        /// <remarks/>
        public void GetReceiptUpdate_OnDemandAsync(System.Data.DataSet dataSet, object userState) {
            if ((this.GetReceiptUpdate_OnDemandOperationCompleted == null)) {
                this.GetReceiptUpdate_OnDemandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptUpdate_OnDemandOperationCompleted);
            }
            this.InvokeAsync("GetReceiptUpdate_OnDemand", new object[] {
                        dataSet}, this.GetReceiptUpdate_OnDemandOperationCompleted, userState);
        }
        
        private void OnGetReceiptUpdate_OnDemandOperationCompleted(object arg) {
            if ((this.GetReceiptUpdate_OnDemandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptUpdate_OnDemandCompleted(this, new GetReceiptUpdate_OnDemandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void UploadDataCompletedEventHandler(object sender, UploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DownloadDataCompletedEventHandler(object sender, DownloadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DownloadDataUpdateCompletedEventHandler(object sender, DownloadDataUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DownloadDataCentralCompletedEventHandler(object sender, DownloadDataCentralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataCentralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataCentralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DownloadDataUpdateCentralCompletedEventHandler(object sender, DownloadDataUpdateCentralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateCentralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateCentralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void UploadStationPrintedReceiptsCompletedEventHandler(object sender, UploadStationPrintedReceiptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadStationPrintedReceiptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadStationPrintedReceiptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void uploadIssueReceiptCompletedEventHandler(object sender, uploadIssueReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadIssueReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadIssueReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DownloadDataIssueReceiptCompletedEventHandler(object sender, DownloadDataIssueReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataIssueReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataIssueReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DownloadDataUpdateIssueReceiptsCompletedEventHandler(object sender, DownloadDataUpdateIssueReceiptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateIssueReceiptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateIssueReceiptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void LogReceiptsReprintRequestCompletedEventHandler(object sender, LogReceiptsReprintRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogReceiptsReprintRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogReceiptsReprintRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void LogReceiptsReprintCompletedEventHandler(object sender, LogReceiptsReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogReceiptsReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogReceiptsReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetReceiptReprintApprovedCompletedEventHandler(object sender, GetReceiptReprintApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptReprintApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptReprintApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void UpdateReceiptReprintApprovedCompletedEventHandler(object sender, UpdateReceiptReprintApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReceiptReprintApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReceiptReprintApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void SplitCollectionCompletedEventHandler(object sender, SplitCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void UpdateSplitCollectionCompletedEventHandler(object sender, UpdateSplitCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSplitCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSplitCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getPayerInfoCompletedEventHandler(object sender, getPayerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void ReceiptRequestLog_OnDemandCompletedEventHandler(object sender, ReceiptRequestLog_OnDemandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiptRequestLog_OnDemandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiptRequestLog_OnDemandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetSingleReceiptCompletedEventHandler(object sender, GetSingleReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetReceipt_OnDemandCompletedEventHandler(object sender, GetReceipt_OnDemandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceipt_OnDemandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceipt_OnDemandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetReceiptUpdate_OnDemandCompletedEventHandler(object sender, GetReceiptUpdate_OnDemandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptUpdate_OnDemandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptUpdate_OnDemandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591