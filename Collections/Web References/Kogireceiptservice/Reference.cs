//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Collection.Kogireceiptservice {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReceiptServiceSoap", Namespace="http://microsoft.com/webservices/")]
    public partial class ReceiptService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataCentralOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateCentralOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadStationPrintedReceiptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadIssueReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataIssueReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateIssueReceiptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogReceiptsReprintOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReceiptService() {
            this.Url = global::Collection.Properties.Settings.Default.Collections_Kogireceiptservice_ReceiptService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadDataCompletedEventHandler UploadDataCompleted;
        
        /// <remarks/>
        public event DownloadDataCompletedEventHandler DownloadDataCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateCompletedEventHandler DownloadDataUpdateCompleted;
        
        /// <remarks/>
        public event DownloadDataCentralCompletedEventHandler DownloadDataCentralCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateCentralCompletedEventHandler DownloadDataUpdateCentralCompleted;
        
        /// <remarks/>
        public event UploadStationPrintedReceiptsCompletedEventHandler UploadStationPrintedReceiptsCompleted;
        
        /// <remarks/>
        public event uploadIssueReceiptCompletedEventHandler uploadIssueReceiptCompleted;
        
        /// <remarks/>
        public event DownloadDataIssueReceiptCompletedEventHandler DownloadDataIssueReceiptCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateIssueReceiptsCompletedEventHandler DownloadDataUpdateIssueReceiptsCompleted;
        
        /// <remarks/>
        public event LogReceiptsReprintCompletedEventHandler LogReceiptsReprintCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UploadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UploadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("UploadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.UploadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void UploadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.UploadDataOperationCompleted == null)) {
                this.UploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDataOperationCompleted);
            }
            this.InvokeAsync("UploadData", new object[] {
                        dataSet,
                        statecode}, this.UploadDataOperationCompleted, userState);
        }
        
        private void OnUploadDataOperationCompleted(object arg) {
            if ((this.UploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDataCompleted(this, new UploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataOperationCompleted == null)) {
                this.DownloadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataOperationCompleted);
            }
            this.InvokeAsync("DownloadData", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataOperationCompleted, userState);
        }
        
        private void OnDownloadDataOperationCompleted(object arg) {
            if ((this.DownloadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataCompleted(this, new DownloadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdate", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdate(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadDataUpdate", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataUpdateAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataUpdateOperationCompleted == null)) {
                this.DownloadDataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdate", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataUpdateOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateCompleted(this, new DownloadDataUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataCentral", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataCentral(string statecode) {
            object[] results = this.Invoke("DownloadDataCentral", new object[] {
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataCentralAsync(string statecode) {
            this.DownloadDataCentralAsync(statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataCentralAsync(string statecode, object userState) {
            if ((this.DownloadDataCentralOperationCompleted == null)) {
                this.DownloadDataCentralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataCentralOperationCompleted);
            }
            this.InvokeAsync("DownloadDataCentral", new object[] {
                        statecode}, this.DownloadDataCentralOperationCompleted, userState);
        }
        
        private void OnDownloadDataCentralOperationCompleted(object arg) {
            if ((this.DownloadDataCentralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataCentralCompleted(this, new DownloadDataCentralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdateCentral", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdateCentral(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadDataUpdateCentral", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateCentralAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataUpdateCentralAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateCentralAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataUpdateCentralOperationCompleted == null)) {
                this.DownloadDataUpdateCentralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateCentralOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdateCentral", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataUpdateCentralOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateCentralOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateCentralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateCentralCompleted(this, new DownloadDataUpdateCentralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UploadStationPrintedReceipts", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UploadStationPrintedReceipts(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("UploadStationPrintedReceipts", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UploadStationPrintedReceiptsAsync(System.Data.DataSet dataSet, string statecode) {
            this.UploadStationPrintedReceiptsAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void UploadStationPrintedReceiptsAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.UploadStationPrintedReceiptsOperationCompleted == null)) {
                this.UploadStationPrintedReceiptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadStationPrintedReceiptsOperationCompleted);
            }
            this.InvokeAsync("UploadStationPrintedReceipts", new object[] {
                        dataSet,
                        statecode}, this.UploadStationPrintedReceiptsOperationCompleted, userState);
        }
        
        private void OnUploadStationPrintedReceiptsOperationCompleted(object arg) {
            if ((this.UploadStationPrintedReceiptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadStationPrintedReceiptsCompleted(this, new UploadStationPrintedReceiptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/uploadIssueReceipt", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet uploadIssueReceipt(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("uploadIssueReceipt", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void uploadIssueReceiptAsync(System.Data.DataSet dataSet, string statecode) {
            this.uploadIssueReceiptAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void uploadIssueReceiptAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.uploadIssueReceiptOperationCompleted == null)) {
                this.uploadIssueReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadIssueReceiptOperationCompleted);
            }
            this.InvokeAsync("uploadIssueReceipt", new object[] {
                        dataSet,
                        statecode}, this.uploadIssueReceiptOperationCompleted, userState);
        }
        
        private void OnuploadIssueReceiptOperationCompleted(object arg) {
            if ((this.uploadIssueReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadIssueReceiptCompleted(this, new uploadIssueReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataIssueReceipt", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataIssueReceipt(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadDataIssueReceipt", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataIssueReceiptAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataIssueReceiptAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataIssueReceiptAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataIssueReceiptOperationCompleted == null)) {
                this.DownloadDataIssueReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataIssueReceiptOperationCompleted);
            }
            this.InvokeAsync("DownloadDataIssueReceipt", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataIssueReceiptOperationCompleted, userState);
        }
        
        private void OnDownloadDataIssueReceiptOperationCompleted(object arg) {
            if ((this.DownloadDataIssueReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataIssueReceiptCompleted(this, new DownloadDataIssueReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdateIssueReceipts", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdateIssueReceipts(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("DownloadDataUpdateIssueReceipts", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateIssueReceiptsAsync(System.Data.DataSet dataSet, string statecode) {
            this.DownloadDataUpdateIssueReceiptsAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateIssueReceiptsAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.DownloadDataUpdateIssueReceiptsOperationCompleted == null)) {
                this.DownloadDataUpdateIssueReceiptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateIssueReceiptsOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdateIssueReceipts", new object[] {
                        dataSet,
                        statecode}, this.DownloadDataUpdateIssueReceiptsOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateIssueReceiptsOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateIssueReceiptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateIssueReceiptsCompleted(this, new DownloadDataUpdateIssueReceiptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/LogReceiptsReprint", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LogReceiptsReprint(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("LogReceiptsReprint", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LogReceiptsReprintAsync(System.Data.DataSet dataSet, string statecode) {
            this.LogReceiptsReprintAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void LogReceiptsReprintAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.LogReceiptsReprintOperationCompleted == null)) {
                this.LogReceiptsReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogReceiptsReprintOperationCompleted);
            }
            this.InvokeAsync("LogReceiptsReprint", new object[] {
                        dataSet,
                        statecode}, this.LogReceiptsReprintOperationCompleted, userState);
        }
        
        private void OnLogReceiptsReprintOperationCompleted(object arg) {
            if ((this.LogReceiptsReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogReceiptsReprintCompleted(this, new LogReceiptsReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadDataCompletedEventHandler(object sender, UploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataCompletedEventHandler(object sender, DownloadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataUpdateCompletedEventHandler(object sender, DownloadDataUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataCentralCompletedEventHandler(object sender, DownloadDataCentralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataCentralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataCentralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataUpdateCentralCompletedEventHandler(object sender, DownloadDataUpdateCentralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateCentralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateCentralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadStationPrintedReceiptsCompletedEventHandler(object sender, UploadStationPrintedReceiptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadStationPrintedReceiptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadStationPrintedReceiptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void uploadIssueReceiptCompletedEventHandler(object sender, uploadIssueReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadIssueReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadIssueReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataIssueReceiptCompletedEventHandler(object sender, DownloadDataIssueReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataIssueReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataIssueReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataUpdateIssueReceiptsCompletedEventHandler(object sender, DownloadDataUpdateIssueReceiptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateIssueReceiptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateIssueReceiptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LogReceiptsReprintCompletedEventHandler(object sender, LogReceiptsReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogReceiptsReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogReceiptsReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591