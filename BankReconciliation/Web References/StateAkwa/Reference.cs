//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BankReconciliation.StateAkwa {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CollectionManagerSoap", Namespace="http://microsoft.com/webservices/")]
    public partial class CollectionManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CollectionTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataTaxSmartOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDataUpdateTaxSmartOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaxPayerUploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaxAgentUploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback TccReverseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUtinOperationCompleted;
        
        private System.Threading.SendOrPostCallback TccAdvancePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchPaymentForPAYENormalisationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTaxAgentPaymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTaxAgentAnnualReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback PAYEPaymentBreakDownOperationCompleted;
        
        private System.Threading.SendOrPostCallback PAYEReverseBreakDownOperationCompleted;
        
        private System.Threading.SendOrPostCallback PAYEReverseTaxAgentPaymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PAYEReverseTaxAgentNormalisationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaxAgentAnnualReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoFetchPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoNormalizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoTransactionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoTransactionLogReversalOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoFetchForNormalizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback TccdoPaymentNormalisationReversalOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoSubstitutionFetchOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoReversalrequestLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoCheckApprovalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoCheckApprovalStatus_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoCheckReversalRequestApprovalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoCheckReversalRequestApprovalStatus_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaxAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaxPAYE_SINGLEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaxPAYEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaxPAYE_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCGetAnnualReturn_TaxAgent_SINGLEOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCGetAnnualReturn_TaxAgent_ALLOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCGetAnnualReturn_TaxAgent_ALL_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCUpdateTaxPayerUTIN_AnnualReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCGetAnnualReturn_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCGetAnnualReturn_Group_CheckStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoModificationRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TCCdoModificationCheckApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback TccAssessmentUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelistUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CollectionManager() {
            this.Url = global::BankReconciliation.Properties.Settings.Default.BankReconciliation_StateAkwa_CollectionManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CollectionTransferCompletedEventHandler CollectionTransferCompleted;
        
        /// <remarks/>
        public event DownloadDataCompletedEventHandler DownloadDataCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateCompletedEventHandler DownloadDataUpdateCompleted;
        
        /// <remarks/>
        public event DownloadDataTaxSmartCompletedEventHandler DownloadDataTaxSmartCompleted;
        
        /// <remarks/>
        public event DownloadDataUpdateTaxSmartCompletedEventHandler DownloadDataUpdateTaxSmartCompleted;
        
        /// <remarks/>
        public event TaxPayerUploadDataCompletedEventHandler TaxPayerUploadDataCompleted;
        
        /// <remarks/>
        public event TaxAgentUploadDataCompletedEventHandler TaxAgentUploadDataCompleted;
        
        /// <remarks/>
        public event GetPaymentInfoCompletedEventHandler GetPaymentInfoCompleted;
        
        /// <remarks/>
        public event GetPaymentInfo2CompletedEventHandler GetPaymentInfo2Completed;
        
        /// <remarks/>
        public event TccReverseCompletedEventHandler TccReverseCompleted;
        
        /// <remarks/>
        public event ValidateUtinCompletedEventHandler ValidateUtinCompleted;
        
        /// <remarks/>
        public event TccAdvancePaymentCompletedEventHandler TccAdvancePaymentCompleted;
        
        /// <remarks/>
        public event FetchPaymentForPAYENormalisationCompletedEventHandler FetchPaymentForPAYENormalisationCompleted;
        
        /// <remarks/>
        public event UploadTaxAgentPaymentHistoryCompletedEventHandler UploadTaxAgentPaymentHistoryCompleted;
        
        /// <remarks/>
        public event UploadTaxAgentAnnualReturnCompletedEventHandler UploadTaxAgentAnnualReturnCompleted;
        
        /// <remarks/>
        public event PAYEPaymentBreakDownCompletedEventHandler PAYEPaymentBreakDownCompleted;
        
        /// <remarks/>
        public event PAYEReverseBreakDownCompletedEventHandler PAYEReverseBreakDownCompleted;
        
        /// <remarks/>
        public event PAYEReverseTaxAgentPaymentHistoryCompletedEventHandler PAYEReverseTaxAgentPaymentHistoryCompleted;
        
        /// <remarks/>
        public event PAYEReverseTaxAgentNormalisationCompletedEventHandler PAYEReverseTaxAgentNormalisationCompleted;
        
        /// <remarks/>
        public event GetTaxAgentAnnualReturnCompletedEventHandler GetTaxAgentAnnualReturnCompleted;
        
        /// <remarks/>
        public event TCCdoFetchPaymentCompletedEventHandler TCCdoFetchPaymentCompleted;
        
        /// <remarks/>
        public event TCCdoNormalizationCompletedEventHandler TCCdoNormalizationCompleted;
        
        /// <remarks/>
        public event TCCdoTransactionLogCompletedEventHandler TCCdoTransactionLogCompleted;
        
        /// <remarks/>
        public event TCCdoTransactionLogReversalCompletedEventHandler TCCdoTransactionLogReversalCompleted;
        
        /// <remarks/>
        public event TCCdoFetchForNormalizationCompletedEventHandler TCCdoFetchForNormalizationCompleted;
        
        /// <remarks/>
        public event TccdoPaymentNormalisationReversalCompletedEventHandler TccdoPaymentNormalisationReversalCompleted;
        
        /// <remarks/>
        public event TCCdoSubstitutionFetchCompletedEventHandler TCCdoSubstitutionFetchCompleted;
        
        /// <remarks/>
        public event TCCdoReversalrequestLogCompletedEventHandler TCCdoReversalrequestLogCompleted;
        
        /// <remarks/>
        public event TCCdoCheckApprovalStatusCompletedEventHandler TCCdoCheckApprovalStatusCompleted;
        
        /// <remarks/>
        public event TCCdoCheckApprovalStatus_UpdateCompletedEventHandler TCCdoCheckApprovalStatus_UpdateCompleted;
        
        /// <remarks/>
        public event TCCdoCheckReversalRequestApprovalStatusCompletedEventHandler TCCdoCheckReversalRequestApprovalStatusCompleted;
        
        /// <remarks/>
        public event TCCdoCheckReversalRequestApprovalStatus_UpdateCompletedEventHandler TCCdoCheckReversalRequestApprovalStatus_UpdateCompleted;
        
        /// <remarks/>
        public event GetTaxAgentCompletedEventHandler GetTaxAgentCompleted;
        
        /// <remarks/>
        public event GetTaxPAYE_SINGLECompletedEventHandler GetTaxPAYE_SINGLECompleted;
        
        /// <remarks/>
        public event GetTaxPAYECompletedEventHandler GetTaxPAYECompleted;
        
        /// <remarks/>
        public event GetTaxPAYE_UpdateCompletedEventHandler GetTaxPAYE_UpdateCompleted;
        
        /// <remarks/>
        public event TCCGetAnnualReturn_TaxAgent_SINGLECompletedEventHandler TCCGetAnnualReturn_TaxAgent_SINGLECompleted;
        
        /// <remarks/>
        public event TCCGetAnnualReturn_TaxAgent_ALLCompletedEventHandler TCCGetAnnualReturn_TaxAgent_ALLCompleted;
        
        /// <remarks/>
        public event TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompletedEventHandler TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompleted;
        
        /// <remarks/>
        public event TCCUpdateTaxPayerUTIN_AnnualReturnCompletedEventHandler TCCUpdateTaxPayerUTIN_AnnualReturnCompleted;
        
        /// <remarks/>
        public event TCCGetAnnualReturn_GroupCompletedEventHandler TCCGetAnnualReturn_GroupCompleted;
        
        /// <remarks/>
        public event TCCGetAnnualReturn_Group_CheckStatusCompletedEventHandler TCCGetAnnualReturn_Group_CheckStatusCompleted;
        
        /// <remarks/>
        public event TCCdoModificationRequestsCompletedEventHandler TCCdoModificationRequestsCompleted;
        
        /// <remarks/>
        public event TCCdoModificationCheckApprovalCompletedEventHandler TCCdoModificationCheckApprovalCompleted;
        
        /// <remarks/>
        public event TccAssessmentUploadCompletedEventHandler TccAssessmentUploadCompleted;
        
        /// <remarks/>
        public event DelistUpdateCompletedEventHandler DelistUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/CollectionTransfer", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CollectionTransfer(System.Data.DataSet _dataset) {
            object[] results = this.Invoke("CollectionTransfer", new object[] {
                        _dataset});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CollectionTransferAsync(System.Data.DataSet _dataset) {
            this.CollectionTransferAsync(_dataset, null);
        }
        
        /// <remarks/>
        public void CollectionTransferAsync(System.Data.DataSet _dataset, object userState) {
            if ((this.CollectionTransferOperationCompleted == null)) {
                this.CollectionTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCollectionTransferOperationCompleted);
            }
            this.InvokeAsync("CollectionTransfer", new object[] {
                        _dataset}, this.CollectionTransferOperationCompleted, userState);
        }
        
        private void OnCollectionTransferOperationCompleted(object arg) {
            if ((this.CollectionTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CollectionTransferCompleted(this, new CollectionTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadData(string statecode) {
            object[] results = this.Invoke("DownloadData", new object[] {
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataAsync(string statecode) {
            this.DownloadDataAsync(statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataAsync(string statecode, object userState) {
            if ((this.DownloadDataOperationCompleted == null)) {
                this.DownloadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataOperationCompleted);
            }
            this.InvokeAsync("DownloadData", new object[] {
                        statecode}, this.DownloadDataOperationCompleted, userState);
        }
        
        private void OnDownloadDataOperationCompleted(object arg) {
            if ((this.DownloadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataCompleted(this, new DownloadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdate", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdate(System.Data.DataSet dataSet, System.Data.DataSet dataSetCredentials, string statecode) {
            object[] results = this.Invoke("DownloadDataUpdate", new object[] {
                        dataSet,
                        dataSetCredentials,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateAsync(System.Data.DataSet dataSet, System.Data.DataSet dataSetCredentials, string statecode) {
            this.DownloadDataUpdateAsync(dataSet, dataSetCredentials, statecode, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateAsync(System.Data.DataSet dataSet, System.Data.DataSet dataSetCredentials, string statecode, object userState) {
            if ((this.DownloadDataUpdateOperationCompleted == null)) {
                this.DownloadDataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdate", new object[] {
                        dataSet,
                        dataSetCredentials,
                        statecode}, this.DownloadDataUpdateOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateCompleted(this, new DownloadDataUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataTaxSmart", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataTaxSmart() {
            object[] results = this.Invoke("DownloadDataTaxSmart", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataTaxSmartAsync() {
            this.DownloadDataTaxSmartAsync(null);
        }
        
        /// <remarks/>
        public void DownloadDataTaxSmartAsync(object userState) {
            if ((this.DownloadDataTaxSmartOperationCompleted == null)) {
                this.DownloadDataTaxSmartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataTaxSmartOperationCompleted);
            }
            this.InvokeAsync("DownloadDataTaxSmart", new object[0], this.DownloadDataTaxSmartOperationCompleted, userState);
        }
        
        private void OnDownloadDataTaxSmartOperationCompleted(object arg) {
            if ((this.DownloadDataTaxSmartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataTaxSmartCompleted(this, new DownloadDataTaxSmartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DownloadDataUpdateTaxSmart", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownloadDataUpdateTaxSmart(System.Data.DataSet dataSet) {
            object[] results = this.Invoke("DownloadDataUpdateTaxSmart", new object[] {
                        dataSet});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDataUpdateTaxSmartAsync(System.Data.DataSet dataSet) {
            this.DownloadDataUpdateTaxSmartAsync(dataSet, null);
        }
        
        /// <remarks/>
        public void DownloadDataUpdateTaxSmartAsync(System.Data.DataSet dataSet, object userState) {
            if ((this.DownloadDataUpdateTaxSmartOperationCompleted == null)) {
                this.DownloadDataUpdateTaxSmartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDataUpdateTaxSmartOperationCompleted);
            }
            this.InvokeAsync("DownloadDataUpdateTaxSmart", new object[] {
                        dataSet}, this.DownloadDataUpdateTaxSmartOperationCompleted, userState);
        }
        
        private void OnDownloadDataUpdateTaxSmartOperationCompleted(object arg) {
            if ((this.DownloadDataUpdateTaxSmartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDataUpdateTaxSmartCompleted(this, new DownloadDataUpdateTaxSmartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TaxPayerUploadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TaxPayerUploadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("TaxPayerUploadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TaxPayerUploadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.TaxPayerUploadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void TaxPayerUploadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.TaxPayerUploadDataOperationCompleted == null)) {
                this.TaxPayerUploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaxPayerUploadDataOperationCompleted);
            }
            this.InvokeAsync("TaxPayerUploadData", new object[] {
                        dataSet,
                        statecode}, this.TaxPayerUploadDataOperationCompleted, userState);
        }
        
        private void OnTaxPayerUploadDataOperationCompleted(object arg) {
            if ((this.TaxPayerUploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaxPayerUploadDataCompleted(this, new TaxPayerUploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TaxAgentUploadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TaxAgentUploadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("TaxAgentUploadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TaxAgentUploadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.TaxAgentUploadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void TaxAgentUploadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.TaxAgentUploadDataOperationCompleted == null)) {
                this.TaxAgentUploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaxAgentUploadDataOperationCompleted);
            }
            this.InvokeAsync("TaxAgentUploadData", new object[] {
                        dataSet,
                        statecode}, this.TaxAgentUploadDataOperationCompleted, userState);
        }
        
        private void OnTaxAgentUploadDataOperationCompleted(object arg) {
            if ((this.TaxAgentUploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaxAgentUploadDataCompleted(this, new TaxAgentUploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetPaymentInfo", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentInfo(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string userid) {
            object[] results = this.Invoke("GetPaymentInfo", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        userid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentInfoAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string userid) {
            this.GetPaymentInfoAsync(dataSet, statecode, username, password, keyword, taxPayerType, userid, null);
        }
        
        /// <remarks/>
        public void GetPaymentInfoAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string userid, object userState) {
            if ((this.GetPaymentInfoOperationCompleted == null)) {
                this.GetPaymentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentInfoOperationCompleted);
            }
            this.InvokeAsync("GetPaymentInfo", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        userid}, this.GetPaymentInfoOperationCompleted, userState);
        }
        
        private void OnGetPaymentInfoOperationCompleted(object arg) {
            if ((this.GetPaymentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentInfoCompleted(this, new GetPaymentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetPaymentInfo2", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentInfo2(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string localusername, string Consultantid) {
            object[] results = this.Invoke("GetPaymentInfo2", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        localusername,
                        Consultantid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentInfo2Async(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string localusername, string Consultantid) {
            this.GetPaymentInfo2Async(dataSet, statecode, username, password, keyword, taxPayerType, localusername, Consultantid, null);
        }
        
        /// <remarks/>
        public void GetPaymentInfo2Async(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string localusername, string Consultantid, object userState) {
            if ((this.GetPaymentInfo2OperationCompleted == null)) {
                this.GetPaymentInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentInfo2OperationCompleted);
            }
            this.InvokeAsync("GetPaymentInfo2", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        localusername,
                        Consultantid}, this.GetPaymentInfo2OperationCompleted, userState);
        }
        
        private void OnGetPaymentInfo2OperationCompleted(object arg) {
            if ((this.GetPaymentInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentInfo2Completed(this, new GetPaymentInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TccReverse", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TccReverse(System.Data.DataSet dataSet, string statecode, string username, string password, string consultantid, string reversaltype, string localusername) {
            object[] results = this.Invoke("TccReverse", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        consultantid,
                        reversaltype,
                        localusername});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TccReverseAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string consultantid, string reversaltype, string localusername) {
            this.TccReverseAsync(dataSet, statecode, username, password, consultantid, reversaltype, localusername, null);
        }
        
        /// <remarks/>
        public void TccReverseAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string consultantid, string reversaltype, string localusername, object userState) {
            if ((this.TccReverseOperationCompleted == null)) {
                this.TccReverseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTccReverseOperationCompleted);
            }
            this.InvokeAsync("TccReverse", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        consultantid,
                        reversaltype,
                        localusername}, this.TccReverseOperationCompleted, userState);
        }
        
        private void OnTccReverseOperationCompleted(object arg) {
            if ((this.TccReverseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TccReverseCompleted(this, new TccReverseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/ValidateUtin", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateUtin(string UTIN, string statecode, string PayerType, string TccNo) {
            object[] results = this.Invoke("ValidateUtin", new object[] {
                        UTIN,
                        statecode,
                        PayerType,
                        TccNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUtinAsync(string UTIN, string statecode, string PayerType, string TccNo) {
            this.ValidateUtinAsync(UTIN, statecode, PayerType, TccNo, null);
        }
        
        /// <remarks/>
        public void ValidateUtinAsync(string UTIN, string statecode, string PayerType, string TccNo, object userState) {
            if ((this.ValidateUtinOperationCompleted == null)) {
                this.ValidateUtinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUtinOperationCompleted);
            }
            this.InvokeAsync("ValidateUtin", new object[] {
                        UTIN,
                        statecode,
                        PayerType,
                        TccNo}, this.ValidateUtinOperationCompleted, userState);
        }
        
        private void OnValidateUtinOperationCompleted(object arg) {
            if ((this.ValidateUtinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUtinCompleted(this, new ValidateUtinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TccAdvancePayment", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TccAdvancePayment(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("TccAdvancePayment", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TccAdvancePaymentAsync(System.Data.DataSet dataSet, string statecode) {
            this.TccAdvancePaymentAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void TccAdvancePaymentAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.TccAdvancePaymentOperationCompleted == null)) {
                this.TccAdvancePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTccAdvancePaymentOperationCompleted);
            }
            this.InvokeAsync("TccAdvancePayment", new object[] {
                        dataSet,
                        statecode}, this.TccAdvancePaymentOperationCompleted, userState);
        }
        
        private void OnTccAdvancePaymentOperationCompleted(object arg) {
            if ((this.TccAdvancePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TccAdvancePaymentCompleted(this, new TccAdvancePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/FetchPaymentForPAYENormalisation", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FetchPaymentForPAYENormalisation(System.Data.DataSet dataSet, string username, string password, string users, string ConsultantID, string keyword) {
            object[] results = this.Invoke("FetchPaymentForPAYENormalisation", new object[] {
                        dataSet,
                        username,
                        password,
                        users,
                        ConsultantID,
                        keyword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchPaymentForPAYENormalisationAsync(System.Data.DataSet dataSet, string username, string password, string users, string ConsultantID, string keyword) {
            this.FetchPaymentForPAYENormalisationAsync(dataSet, username, password, users, ConsultantID, keyword, null);
        }
        
        /// <remarks/>
        public void FetchPaymentForPAYENormalisationAsync(System.Data.DataSet dataSet, string username, string password, string users, string ConsultantID, string keyword, object userState) {
            if ((this.FetchPaymentForPAYENormalisationOperationCompleted == null)) {
                this.FetchPaymentForPAYENormalisationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchPaymentForPAYENormalisationOperationCompleted);
            }
            this.InvokeAsync("FetchPaymentForPAYENormalisation", new object[] {
                        dataSet,
                        username,
                        password,
                        users,
                        ConsultantID,
                        keyword}, this.FetchPaymentForPAYENormalisationOperationCompleted, userState);
        }
        
        private void OnFetchPaymentForPAYENormalisationOperationCompleted(object arg) {
            if ((this.FetchPaymentForPAYENormalisationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchPaymentForPAYENormalisationCompleted(this, new FetchPaymentForPAYENormalisationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UploadTaxAgentPaymentHistory", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UploadTaxAgentPaymentHistory(System.Data.DataSet dataSet) {
            object[] results = this.Invoke("UploadTaxAgentPaymentHistory", new object[] {
                        dataSet});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTaxAgentPaymentHistoryAsync(System.Data.DataSet dataSet) {
            this.UploadTaxAgentPaymentHistoryAsync(dataSet, null);
        }
        
        /// <remarks/>
        public void UploadTaxAgentPaymentHistoryAsync(System.Data.DataSet dataSet, object userState) {
            if ((this.UploadTaxAgentPaymentHistoryOperationCompleted == null)) {
                this.UploadTaxAgentPaymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTaxAgentPaymentHistoryOperationCompleted);
            }
            this.InvokeAsync("UploadTaxAgentPaymentHistory", new object[] {
                        dataSet}, this.UploadTaxAgentPaymentHistoryOperationCompleted, userState);
        }
        
        private void OnUploadTaxAgentPaymentHistoryOperationCompleted(object arg) {
            if ((this.UploadTaxAgentPaymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTaxAgentPaymentHistoryCompleted(this, new UploadTaxAgentPaymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UploadTaxAgentAnnualReturn", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UploadTaxAgentAnnualReturn(System.Data.DataSet dataSet, string users) {
            object[] results = this.Invoke("UploadTaxAgentAnnualReturn", new object[] {
                        dataSet,
                        users});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTaxAgentAnnualReturnAsync(System.Data.DataSet dataSet, string users) {
            this.UploadTaxAgentAnnualReturnAsync(dataSet, users, null);
        }
        
        /// <remarks/>
        public void UploadTaxAgentAnnualReturnAsync(System.Data.DataSet dataSet, string users, object userState) {
            if ((this.UploadTaxAgentAnnualReturnOperationCompleted == null)) {
                this.UploadTaxAgentAnnualReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTaxAgentAnnualReturnOperationCompleted);
            }
            this.InvokeAsync("UploadTaxAgentAnnualReturn", new object[] {
                        dataSet,
                        users}, this.UploadTaxAgentAnnualReturnOperationCompleted, userState);
        }
        
        private void OnUploadTaxAgentAnnualReturnOperationCompleted(object arg) {
            if ((this.UploadTaxAgentAnnualReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTaxAgentAnnualReturnCompleted(this, new UploadTaxAgentAnnualReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/PAYEPaymentBreakDown", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PAYEPaymentBreakDown(System.Data.DataSet dataSet, string TaxAgentUTIN, int Year, string Postedby) {
            object[] results = this.Invoke("PAYEPaymentBreakDown", new object[] {
                        dataSet,
                        TaxAgentUTIN,
                        Year,
                        Postedby});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PAYEPaymentBreakDownAsync(System.Data.DataSet dataSet, string TaxAgentUTIN, int Year, string Postedby) {
            this.PAYEPaymentBreakDownAsync(dataSet, TaxAgentUTIN, Year, Postedby, null);
        }
        
        /// <remarks/>
        public void PAYEPaymentBreakDownAsync(System.Data.DataSet dataSet, string TaxAgentUTIN, int Year, string Postedby, object userState) {
            if ((this.PAYEPaymentBreakDownOperationCompleted == null)) {
                this.PAYEPaymentBreakDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPAYEPaymentBreakDownOperationCompleted);
            }
            this.InvokeAsync("PAYEPaymentBreakDown", new object[] {
                        dataSet,
                        TaxAgentUTIN,
                        Year,
                        Postedby}, this.PAYEPaymentBreakDownOperationCompleted, userState);
        }
        
        private void OnPAYEPaymentBreakDownOperationCompleted(object arg) {
            if ((this.PAYEPaymentBreakDownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PAYEPaymentBreakDownCompleted(this, new PAYEPaymentBreakDownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/PAYEReverseBreakDown", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PAYEReverseBreakDown(string BatchID, string Users) {
            object[] results = this.Invoke("PAYEReverseBreakDown", new object[] {
                        BatchID,
                        Users});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PAYEReverseBreakDownAsync(string BatchID, string Users) {
            this.PAYEReverseBreakDownAsync(BatchID, Users, null);
        }
        
        /// <remarks/>
        public void PAYEReverseBreakDownAsync(string BatchID, string Users, object userState) {
            if ((this.PAYEReverseBreakDownOperationCompleted == null)) {
                this.PAYEReverseBreakDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPAYEReverseBreakDownOperationCompleted);
            }
            this.InvokeAsync("PAYEReverseBreakDown", new object[] {
                        BatchID,
                        Users}, this.PAYEReverseBreakDownOperationCompleted, userState);
        }
        
        private void OnPAYEReverseBreakDownOperationCompleted(object arg) {
            if ((this.PAYEReverseBreakDownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PAYEReverseBreakDownCompleted(this, new PAYEReverseBreakDownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/PAYEReverseTaxAgentPaymentHistory", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PAYEReverseTaxAgentPaymentHistory(System.Data.DataSet dataSet) {
            object[] results = this.Invoke("PAYEReverseTaxAgentPaymentHistory", new object[] {
                        dataSet});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PAYEReverseTaxAgentPaymentHistoryAsync(System.Data.DataSet dataSet) {
            this.PAYEReverseTaxAgentPaymentHistoryAsync(dataSet, null);
        }
        
        /// <remarks/>
        public void PAYEReverseTaxAgentPaymentHistoryAsync(System.Data.DataSet dataSet, object userState) {
            if ((this.PAYEReverseTaxAgentPaymentHistoryOperationCompleted == null)) {
                this.PAYEReverseTaxAgentPaymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPAYEReverseTaxAgentPaymentHistoryOperationCompleted);
            }
            this.InvokeAsync("PAYEReverseTaxAgentPaymentHistory", new object[] {
                        dataSet}, this.PAYEReverseTaxAgentPaymentHistoryOperationCompleted, userState);
        }
        
        private void OnPAYEReverseTaxAgentPaymentHistoryOperationCompleted(object arg) {
            if ((this.PAYEReverseTaxAgentPaymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PAYEReverseTaxAgentPaymentHistoryCompleted(this, new PAYEReverseTaxAgentPaymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/PAYEReverseTaxAgentNormalisation", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PAYEReverseTaxAgentNormalisation(System.Data.DataSet dataSet, string users) {
            object[] results = this.Invoke("PAYEReverseTaxAgentNormalisation", new object[] {
                        dataSet,
                        users});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PAYEReverseTaxAgentNormalisationAsync(System.Data.DataSet dataSet, string users) {
            this.PAYEReverseTaxAgentNormalisationAsync(dataSet, users, null);
        }
        
        /// <remarks/>
        public void PAYEReverseTaxAgentNormalisationAsync(System.Data.DataSet dataSet, string users, object userState) {
            if ((this.PAYEReverseTaxAgentNormalisationOperationCompleted == null)) {
                this.PAYEReverseTaxAgentNormalisationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPAYEReverseTaxAgentNormalisationOperationCompleted);
            }
            this.InvokeAsync("PAYEReverseTaxAgentNormalisation", new object[] {
                        dataSet,
                        users}, this.PAYEReverseTaxAgentNormalisationOperationCompleted, userState);
        }
        
        private void OnPAYEReverseTaxAgentNormalisationOperationCompleted(object arg) {
            if ((this.PAYEReverseTaxAgentNormalisationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PAYEReverseTaxAgentNormalisationCompleted(this, new PAYEReverseTaxAgentNormalisationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetTaxAgentAnnualReturn", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaxAgentAnnualReturn(string TaxAgentUtin, string staffNo) {
            object[] results = this.Invoke("GetTaxAgentAnnualReturn", new object[] {
                        TaxAgentUtin,
                        staffNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaxAgentAnnualReturnAsync(string TaxAgentUtin, string staffNo) {
            this.GetTaxAgentAnnualReturnAsync(TaxAgentUtin, staffNo, null);
        }
        
        /// <remarks/>
        public void GetTaxAgentAnnualReturnAsync(string TaxAgentUtin, string staffNo, object userState) {
            if ((this.GetTaxAgentAnnualReturnOperationCompleted == null)) {
                this.GetTaxAgentAnnualReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaxAgentAnnualReturnOperationCompleted);
            }
            this.InvokeAsync("GetTaxAgentAnnualReturn", new object[] {
                        TaxAgentUtin,
                        staffNo}, this.GetTaxAgentAnnualReturnOperationCompleted, userState);
        }
        
        private void OnGetTaxAgentAnnualReturnOperationCompleted(object arg) {
            if ((this.GetTaxAgentAnnualReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaxAgentAnnualReturnCompleted(this, new GetTaxAgentAnnualReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoFetchPayment", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoFetchPayment(string UTIN, string username, string password, string consultantid) {
            object[] results = this.Invoke("TCCdoFetchPayment", new object[] {
                        UTIN,
                        username,
                        password,
                        consultantid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoFetchPaymentAsync(string UTIN, string username, string password, string consultantid) {
            this.TCCdoFetchPaymentAsync(UTIN, username, password, consultantid, null);
        }
        
        /// <remarks/>
        public void TCCdoFetchPaymentAsync(string UTIN, string username, string password, string consultantid, object userState) {
            if ((this.TCCdoFetchPaymentOperationCompleted == null)) {
                this.TCCdoFetchPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoFetchPaymentOperationCompleted);
            }
            this.InvokeAsync("TCCdoFetchPayment", new object[] {
                        UTIN,
                        username,
                        password,
                        consultantid}, this.TCCdoFetchPaymentOperationCompleted, userState);
        }
        
        private void OnTCCdoFetchPaymentOperationCompleted(object arg) {
            if ((this.TCCdoFetchPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoFetchPaymentCompleted(this, new TCCdoFetchPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoNormalization", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoNormalization(System.Data.DataSet _dataset, string LocalUser, string UserName, string Password, string ConsultantID) {
            object[] results = this.Invoke("TCCdoNormalization", new object[] {
                        _dataset,
                        LocalUser,
                        UserName,
                        Password,
                        ConsultantID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoNormalizationAsync(System.Data.DataSet _dataset, string LocalUser, string UserName, string Password, string ConsultantID) {
            this.TCCdoNormalizationAsync(_dataset, LocalUser, UserName, Password, ConsultantID, null);
        }
        
        /// <remarks/>
        public void TCCdoNormalizationAsync(System.Data.DataSet _dataset, string LocalUser, string UserName, string Password, string ConsultantID, object userState) {
            if ((this.TCCdoNormalizationOperationCompleted == null)) {
                this.TCCdoNormalizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoNormalizationOperationCompleted);
            }
            this.InvokeAsync("TCCdoNormalization", new object[] {
                        _dataset,
                        LocalUser,
                        UserName,
                        Password,
                        ConsultantID}, this.TCCdoNormalizationOperationCompleted, userState);
        }
        
        private void OnTCCdoNormalizationOperationCompleted(object arg) {
            if ((this.TCCdoNormalizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoNormalizationCompleted(this, new TCCdoNormalizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoTransactionLog", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoTransactionLog(System.Data.DataSet _dataset, string username, string password, string consultantid) {
            object[] results = this.Invoke("TCCdoTransactionLog", new object[] {
                        _dataset,
                        username,
                        password,
                        consultantid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoTransactionLogAsync(System.Data.DataSet _dataset, string username, string password, string consultantid) {
            this.TCCdoTransactionLogAsync(_dataset, username, password, consultantid, null);
        }
        
        /// <remarks/>
        public void TCCdoTransactionLogAsync(System.Data.DataSet _dataset, string username, string password, string consultantid, object userState) {
            if ((this.TCCdoTransactionLogOperationCompleted == null)) {
                this.TCCdoTransactionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoTransactionLogOperationCompleted);
            }
            this.InvokeAsync("TCCdoTransactionLog", new object[] {
                        _dataset,
                        username,
                        password,
                        consultantid}, this.TCCdoTransactionLogOperationCompleted, userState);
        }
        
        private void OnTCCdoTransactionLogOperationCompleted(object arg) {
            if ((this.TCCdoTransactionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoTransactionLogCompleted(this, new TCCdoTransactionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoTransactionLogReversal", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoTransactionLogReversal(string BatchNumber, string User) {
            object[] results = this.Invoke("TCCdoTransactionLogReversal", new object[] {
                        BatchNumber,
                        User});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoTransactionLogReversalAsync(string BatchNumber, string User) {
            this.TCCdoTransactionLogReversalAsync(BatchNumber, User, null);
        }
        
        /// <remarks/>
        public void TCCdoTransactionLogReversalAsync(string BatchNumber, string User, object userState) {
            if ((this.TCCdoTransactionLogReversalOperationCompleted == null)) {
                this.TCCdoTransactionLogReversalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoTransactionLogReversalOperationCompleted);
            }
            this.InvokeAsync("TCCdoTransactionLogReversal", new object[] {
                        BatchNumber,
                        User}, this.TCCdoTransactionLogReversalOperationCompleted, userState);
        }
        
        private void OnTCCdoTransactionLogReversalOperationCompleted(object arg) {
            if ((this.TCCdoTransactionLogReversalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoTransactionLogReversalCompleted(this, new TCCdoTransactionLogReversalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoFetchForNormalization", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoFetchForNormalization(System.Data.DataSet _dataset, string username, string password, string consultantid) {
            object[] results = this.Invoke("TCCdoFetchForNormalization", new object[] {
                        _dataset,
                        username,
                        password,
                        consultantid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoFetchForNormalizationAsync(System.Data.DataSet _dataset, string username, string password, string consultantid) {
            this.TCCdoFetchForNormalizationAsync(_dataset, username, password, consultantid, null);
        }
        
        /// <remarks/>
        public void TCCdoFetchForNormalizationAsync(System.Data.DataSet _dataset, string username, string password, string consultantid, object userState) {
            if ((this.TCCdoFetchForNormalizationOperationCompleted == null)) {
                this.TCCdoFetchForNormalizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoFetchForNormalizationOperationCompleted);
            }
            this.InvokeAsync("TCCdoFetchForNormalization", new object[] {
                        _dataset,
                        username,
                        password,
                        consultantid}, this.TCCdoFetchForNormalizationOperationCompleted, userState);
        }
        
        private void OnTCCdoFetchForNormalizationOperationCompleted(object arg) {
            if ((this.TCCdoFetchForNormalizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoFetchForNormalizationCompleted(this, new TCCdoFetchForNormalizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TccdoPaymentNormalisationReversal", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TccdoPaymentNormalisationReversal(string PaymentRefNumber, string UTIN) {
            object[] results = this.Invoke("TccdoPaymentNormalisationReversal", new object[] {
                        PaymentRefNumber,
                        UTIN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TccdoPaymentNormalisationReversalAsync(string PaymentRefNumber, string UTIN) {
            this.TccdoPaymentNormalisationReversalAsync(PaymentRefNumber, UTIN, null);
        }
        
        /// <remarks/>
        public void TccdoPaymentNormalisationReversalAsync(string PaymentRefNumber, string UTIN, object userState) {
            if ((this.TccdoPaymentNormalisationReversalOperationCompleted == null)) {
                this.TccdoPaymentNormalisationReversalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTccdoPaymentNormalisationReversalOperationCompleted);
            }
            this.InvokeAsync("TccdoPaymentNormalisationReversal", new object[] {
                        PaymentRefNumber,
                        UTIN}, this.TccdoPaymentNormalisationReversalOperationCompleted, userState);
        }
        
        private void OnTccdoPaymentNormalisationReversalOperationCompleted(object arg) {
            if ((this.TccdoPaymentNormalisationReversalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TccdoPaymentNormalisationReversalCompleted(this, new TccdoPaymentNormalisationReversalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoSubstitutionFetch", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoSubstitutionFetch(string PaymentRefNumber, string UTIN, string username, string password, string consultantid) {
            object[] results = this.Invoke("TCCdoSubstitutionFetch", new object[] {
                        PaymentRefNumber,
                        UTIN,
                        username,
                        password,
                        consultantid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoSubstitutionFetchAsync(string PaymentRefNumber, string UTIN, string username, string password, string consultantid) {
            this.TCCdoSubstitutionFetchAsync(PaymentRefNumber, UTIN, username, password, consultantid, null);
        }
        
        /// <remarks/>
        public void TCCdoSubstitutionFetchAsync(string PaymentRefNumber, string UTIN, string username, string password, string consultantid, object userState) {
            if ((this.TCCdoSubstitutionFetchOperationCompleted == null)) {
                this.TCCdoSubstitutionFetchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoSubstitutionFetchOperationCompleted);
            }
            this.InvokeAsync("TCCdoSubstitutionFetch", new object[] {
                        PaymentRefNumber,
                        UTIN,
                        username,
                        password,
                        consultantid}, this.TCCdoSubstitutionFetchOperationCompleted, userState);
        }
        
        private void OnTCCdoSubstitutionFetchOperationCompleted(object arg) {
            if ((this.TCCdoSubstitutionFetchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoSubstitutionFetchCompleted(this, new TCCdoSubstitutionFetchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoReversalrequestLog", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoReversalrequestLog(string RequestType, string BatchNumber, string PaymentRefNumber, string UTIN, string TCCNo, string RequestedBy, string ProcessingTaxOfficeCode, System.Data.DataSet _dataset, string RequestComment) {
            object[] results = this.Invoke("TCCdoReversalrequestLog", new object[] {
                        RequestType,
                        BatchNumber,
                        PaymentRefNumber,
                        UTIN,
                        TCCNo,
                        RequestedBy,
                        ProcessingTaxOfficeCode,
                        _dataset,
                        RequestComment});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoReversalrequestLogAsync(string RequestType, string BatchNumber, string PaymentRefNumber, string UTIN, string TCCNo, string RequestedBy, string ProcessingTaxOfficeCode, System.Data.DataSet _dataset, string RequestComment) {
            this.TCCdoReversalrequestLogAsync(RequestType, BatchNumber, PaymentRefNumber, UTIN, TCCNo, RequestedBy, ProcessingTaxOfficeCode, _dataset, RequestComment, null);
        }
        
        /// <remarks/>
        public void TCCdoReversalrequestLogAsync(string RequestType, string BatchNumber, string PaymentRefNumber, string UTIN, string TCCNo, string RequestedBy, string ProcessingTaxOfficeCode, System.Data.DataSet _dataset, string RequestComment, object userState) {
            if ((this.TCCdoReversalrequestLogOperationCompleted == null)) {
                this.TCCdoReversalrequestLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoReversalrequestLogOperationCompleted);
            }
            this.InvokeAsync("TCCdoReversalrequestLog", new object[] {
                        RequestType,
                        BatchNumber,
                        PaymentRefNumber,
                        UTIN,
                        TCCNo,
                        RequestedBy,
                        ProcessingTaxOfficeCode,
                        _dataset,
                        RequestComment}, this.TCCdoReversalrequestLogOperationCompleted, userState);
        }
        
        private void OnTCCdoReversalrequestLogOperationCompleted(object arg) {
            if ((this.TCCdoReversalrequestLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoReversalrequestLogCompleted(this, new TCCdoReversalrequestLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoCheckApprovalStatus", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoCheckApprovalStatus(string ProcessingTaxOfficeCode) {
            object[] results = this.Invoke("TCCdoCheckApprovalStatus", new object[] {
                        ProcessingTaxOfficeCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoCheckApprovalStatusAsync(string ProcessingTaxOfficeCode) {
            this.TCCdoCheckApprovalStatusAsync(ProcessingTaxOfficeCode, null);
        }
        
        /// <remarks/>
        public void TCCdoCheckApprovalStatusAsync(string ProcessingTaxOfficeCode, object userState) {
            if ((this.TCCdoCheckApprovalStatusOperationCompleted == null)) {
                this.TCCdoCheckApprovalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoCheckApprovalStatusOperationCompleted);
            }
            this.InvokeAsync("TCCdoCheckApprovalStatus", new object[] {
                        ProcessingTaxOfficeCode}, this.TCCdoCheckApprovalStatusOperationCompleted, userState);
        }
        
        private void OnTCCdoCheckApprovalStatusOperationCompleted(object arg) {
            if ((this.TCCdoCheckApprovalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoCheckApprovalStatusCompleted(this, new TCCdoCheckApprovalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoCheckApprovalStatus_Update", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoCheckApprovalStatus_Update(System.Data.DataSet _dataset, string ProcessingTaxOfficeCode) {
            object[] results = this.Invoke("TCCdoCheckApprovalStatus_Update", new object[] {
                        _dataset,
                        ProcessingTaxOfficeCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoCheckApprovalStatus_UpdateAsync(System.Data.DataSet _dataset, string ProcessingTaxOfficeCode) {
            this.TCCdoCheckApprovalStatus_UpdateAsync(_dataset, ProcessingTaxOfficeCode, null);
        }
        
        /// <remarks/>
        public void TCCdoCheckApprovalStatus_UpdateAsync(System.Data.DataSet _dataset, string ProcessingTaxOfficeCode, object userState) {
            if ((this.TCCdoCheckApprovalStatus_UpdateOperationCompleted == null)) {
                this.TCCdoCheckApprovalStatus_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoCheckApprovalStatus_UpdateOperationCompleted);
            }
            this.InvokeAsync("TCCdoCheckApprovalStatus_Update", new object[] {
                        _dataset,
                        ProcessingTaxOfficeCode}, this.TCCdoCheckApprovalStatus_UpdateOperationCompleted, userState);
        }
        
        private void OnTCCdoCheckApprovalStatus_UpdateOperationCompleted(object arg) {
            if ((this.TCCdoCheckApprovalStatus_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoCheckApprovalStatus_UpdateCompleted(this, new TCCdoCheckApprovalStatus_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoCheckReversalRequestApprovalStatus", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoCheckReversalRequestApprovalStatus(string ProcessingTaxOfficeCode) {
            object[] results = this.Invoke("TCCdoCheckReversalRequestApprovalStatus", new object[] {
                        ProcessingTaxOfficeCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoCheckReversalRequestApprovalStatusAsync(string ProcessingTaxOfficeCode) {
            this.TCCdoCheckReversalRequestApprovalStatusAsync(ProcessingTaxOfficeCode, null);
        }
        
        /// <remarks/>
        public void TCCdoCheckReversalRequestApprovalStatusAsync(string ProcessingTaxOfficeCode, object userState) {
            if ((this.TCCdoCheckReversalRequestApprovalStatusOperationCompleted == null)) {
                this.TCCdoCheckReversalRequestApprovalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoCheckReversalRequestApprovalStatusOperationCompleted);
            }
            this.InvokeAsync("TCCdoCheckReversalRequestApprovalStatus", new object[] {
                        ProcessingTaxOfficeCode}, this.TCCdoCheckReversalRequestApprovalStatusOperationCompleted, userState);
        }
        
        private void OnTCCdoCheckReversalRequestApprovalStatusOperationCompleted(object arg) {
            if ((this.TCCdoCheckReversalRequestApprovalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoCheckReversalRequestApprovalStatusCompleted(this, new TCCdoCheckReversalRequestApprovalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoCheckReversalRequestApprovalStatus_Update", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoCheckReversalRequestApprovalStatus_Update(System.Data.DataSet _dataset, string ProcessingTaxOfficeCode) {
            object[] results = this.Invoke("TCCdoCheckReversalRequestApprovalStatus_Update", new object[] {
                        _dataset,
                        ProcessingTaxOfficeCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoCheckReversalRequestApprovalStatus_UpdateAsync(System.Data.DataSet _dataset, string ProcessingTaxOfficeCode) {
            this.TCCdoCheckReversalRequestApprovalStatus_UpdateAsync(_dataset, ProcessingTaxOfficeCode, null);
        }
        
        /// <remarks/>
        public void TCCdoCheckReversalRequestApprovalStatus_UpdateAsync(System.Data.DataSet _dataset, string ProcessingTaxOfficeCode, object userState) {
            if ((this.TCCdoCheckReversalRequestApprovalStatus_UpdateOperationCompleted == null)) {
                this.TCCdoCheckReversalRequestApprovalStatus_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoCheckReversalRequestApprovalStatus_UpdateOperationCompleted);
            }
            this.InvokeAsync("TCCdoCheckReversalRequestApprovalStatus_Update", new object[] {
                        _dataset,
                        ProcessingTaxOfficeCode}, this.TCCdoCheckReversalRequestApprovalStatus_UpdateOperationCompleted, userState);
        }
        
        private void OnTCCdoCheckReversalRequestApprovalStatus_UpdateOperationCompleted(object arg) {
            if ((this.TCCdoCheckReversalRequestApprovalStatus_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoCheckReversalRequestApprovalStatus_UpdateCompleted(this, new TCCdoCheckReversalRequestApprovalStatus_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetTaxAgent", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaxAgent(string UTIN) {
            object[] results = this.Invoke("GetTaxAgent", new object[] {
                        UTIN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaxAgentAsync(string UTIN) {
            this.GetTaxAgentAsync(UTIN, null);
        }
        
        /// <remarks/>
        public void GetTaxAgentAsync(string UTIN, object userState) {
            if ((this.GetTaxAgentOperationCompleted == null)) {
                this.GetTaxAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaxAgentOperationCompleted);
            }
            this.InvokeAsync("GetTaxAgent", new object[] {
                        UTIN}, this.GetTaxAgentOperationCompleted, userState);
        }
        
        private void OnGetTaxAgentOperationCompleted(object arg) {
            if ((this.GetTaxAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaxAgentCompleted(this, new GetTaxAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetTaxPAYE_SINGLE", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaxPAYE_SINGLE(string UTIN, string EmployeeUTIN) {
            object[] results = this.Invoke("GetTaxPAYE_SINGLE", new object[] {
                        UTIN,
                        EmployeeUTIN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaxPAYE_SINGLEAsync(string UTIN, string EmployeeUTIN) {
            this.GetTaxPAYE_SINGLEAsync(UTIN, EmployeeUTIN, null);
        }
        
        /// <remarks/>
        public void GetTaxPAYE_SINGLEAsync(string UTIN, string EmployeeUTIN, object userState) {
            if ((this.GetTaxPAYE_SINGLEOperationCompleted == null)) {
                this.GetTaxPAYE_SINGLEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaxPAYE_SINGLEOperationCompleted);
            }
            this.InvokeAsync("GetTaxPAYE_SINGLE", new object[] {
                        UTIN,
                        EmployeeUTIN}, this.GetTaxPAYE_SINGLEOperationCompleted, userState);
        }
        
        private void OnGetTaxPAYE_SINGLEOperationCompleted(object arg) {
            if ((this.GetTaxPAYE_SINGLECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaxPAYE_SINGLECompleted(this, new GetTaxPAYE_SINGLECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetTaxPAYE", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaxPAYE(string UTIN, string StationCode) {
            object[] results = this.Invoke("GetTaxPAYE", new object[] {
                        UTIN,
                        StationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaxPAYEAsync(string UTIN, string StationCode) {
            this.GetTaxPAYEAsync(UTIN, StationCode, null);
        }
        
        /// <remarks/>
        public void GetTaxPAYEAsync(string UTIN, string StationCode, object userState) {
            if ((this.GetTaxPAYEOperationCompleted == null)) {
                this.GetTaxPAYEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaxPAYEOperationCompleted);
            }
            this.InvokeAsync("GetTaxPAYE", new object[] {
                        UTIN,
                        StationCode}, this.GetTaxPAYEOperationCompleted, userState);
        }
        
        private void OnGetTaxPAYEOperationCompleted(object arg) {
            if ((this.GetTaxPAYECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaxPAYECompleted(this, new GetTaxPAYECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetTaxPAYE_Update", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaxPAYE_Update(System.Data.DataSet _ds, string TaxAgentUtin, string StationCode) {
            object[] results = this.Invoke("GetTaxPAYE_Update", new object[] {
                        _ds,
                        TaxAgentUtin,
                        StationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaxPAYE_UpdateAsync(System.Data.DataSet _ds, string TaxAgentUtin, string StationCode) {
            this.GetTaxPAYE_UpdateAsync(_ds, TaxAgentUtin, StationCode, null);
        }
        
        /// <remarks/>
        public void GetTaxPAYE_UpdateAsync(System.Data.DataSet _ds, string TaxAgentUtin, string StationCode, object userState) {
            if ((this.GetTaxPAYE_UpdateOperationCompleted == null)) {
                this.GetTaxPAYE_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaxPAYE_UpdateOperationCompleted);
            }
            this.InvokeAsync("GetTaxPAYE_Update", new object[] {
                        _ds,
                        TaxAgentUtin,
                        StationCode}, this.GetTaxPAYE_UpdateOperationCompleted, userState);
        }
        
        private void OnGetTaxPAYE_UpdateOperationCompleted(object arg) {
            if ((this.GetTaxPAYE_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaxPAYE_UpdateCompleted(this, new GetTaxPAYE_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCGetAnnualReturn_TaxAgent_SINGLE", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCGetAnnualReturn_TaxAgent_SINGLE(string TaxAgentUtin, string EmployeeUTIN) {
            object[] results = this.Invoke("TCCGetAnnualReturn_TaxAgent_SINGLE", new object[] {
                        TaxAgentUtin,
                        EmployeeUTIN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_TaxAgent_SINGLEAsync(string TaxAgentUtin, string EmployeeUTIN) {
            this.TCCGetAnnualReturn_TaxAgent_SINGLEAsync(TaxAgentUtin, EmployeeUTIN, null);
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_TaxAgent_SINGLEAsync(string TaxAgentUtin, string EmployeeUTIN, object userState) {
            if ((this.TCCGetAnnualReturn_TaxAgent_SINGLEOperationCompleted == null)) {
                this.TCCGetAnnualReturn_TaxAgent_SINGLEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCGetAnnualReturn_TaxAgent_SINGLEOperationCompleted);
            }
            this.InvokeAsync("TCCGetAnnualReturn_TaxAgent_SINGLE", new object[] {
                        TaxAgentUtin,
                        EmployeeUTIN}, this.TCCGetAnnualReturn_TaxAgent_SINGLEOperationCompleted, userState);
        }
        
        private void OnTCCGetAnnualReturn_TaxAgent_SINGLEOperationCompleted(object arg) {
            if ((this.TCCGetAnnualReturn_TaxAgent_SINGLECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCGetAnnualReturn_TaxAgent_SINGLECompleted(this, new TCCGetAnnualReturn_TaxAgent_SINGLECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCGetAnnualReturn_TaxAgent_ALL", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCGetAnnualReturn_TaxAgent_ALL(string TaxAgentUtin, string StationCode) {
            object[] results = this.Invoke("TCCGetAnnualReturn_TaxAgent_ALL", new object[] {
                        TaxAgentUtin,
                        StationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_TaxAgent_ALLAsync(string TaxAgentUtin, string StationCode) {
            this.TCCGetAnnualReturn_TaxAgent_ALLAsync(TaxAgentUtin, StationCode, null);
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_TaxAgent_ALLAsync(string TaxAgentUtin, string StationCode, object userState) {
            if ((this.TCCGetAnnualReturn_TaxAgent_ALLOperationCompleted == null)) {
                this.TCCGetAnnualReturn_TaxAgent_ALLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCGetAnnualReturn_TaxAgent_ALLOperationCompleted);
            }
            this.InvokeAsync("TCCGetAnnualReturn_TaxAgent_ALL", new object[] {
                        TaxAgentUtin,
                        StationCode}, this.TCCGetAnnualReturn_TaxAgent_ALLOperationCompleted, userState);
        }
        
        private void OnTCCGetAnnualReturn_TaxAgent_ALLOperationCompleted(object arg) {
            if ((this.TCCGetAnnualReturn_TaxAgent_ALLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCGetAnnualReturn_TaxAgent_ALLCompleted(this, new TCCGetAnnualReturn_TaxAgent_ALLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCGetAnnualReturn_TaxAgent_ALL_Update", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCGetAnnualReturn_TaxAgent_ALL_Update(System.Data.DataSet _ds, string TaxAgentUtin, string StationCode) {
            object[] results = this.Invoke("TCCGetAnnualReturn_TaxAgent_ALL_Update", new object[] {
                        _ds,
                        TaxAgentUtin,
                        StationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_TaxAgent_ALL_UpdateAsync(System.Data.DataSet _ds, string TaxAgentUtin, string StationCode) {
            this.TCCGetAnnualReturn_TaxAgent_ALL_UpdateAsync(_ds, TaxAgentUtin, StationCode, null);
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_TaxAgent_ALL_UpdateAsync(System.Data.DataSet _ds, string TaxAgentUtin, string StationCode, object userState) {
            if ((this.TCCGetAnnualReturn_TaxAgent_ALL_UpdateOperationCompleted == null)) {
                this.TCCGetAnnualReturn_TaxAgent_ALL_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCGetAnnualReturn_TaxAgent_ALL_UpdateOperationCompleted);
            }
            this.InvokeAsync("TCCGetAnnualReturn_TaxAgent_ALL_Update", new object[] {
                        _ds,
                        TaxAgentUtin,
                        StationCode}, this.TCCGetAnnualReturn_TaxAgent_ALL_UpdateOperationCompleted, userState);
        }
        
        private void OnTCCGetAnnualReturn_TaxAgent_ALL_UpdateOperationCompleted(object arg) {
            if ((this.TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompleted(this, new TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCUpdateTaxPayerUTIN_AnnualReturn", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCUpdateTaxPayerUTIN_AnnualReturn(System.Data.DataSet _ds) {
            object[] results = this.Invoke("TCCUpdateTaxPayerUTIN_AnnualReturn", new object[] {
                        _ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCUpdateTaxPayerUTIN_AnnualReturnAsync(System.Data.DataSet _ds) {
            this.TCCUpdateTaxPayerUTIN_AnnualReturnAsync(_ds, null);
        }
        
        /// <remarks/>
        public void TCCUpdateTaxPayerUTIN_AnnualReturnAsync(System.Data.DataSet _ds, object userState) {
            if ((this.TCCUpdateTaxPayerUTIN_AnnualReturnOperationCompleted == null)) {
                this.TCCUpdateTaxPayerUTIN_AnnualReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCUpdateTaxPayerUTIN_AnnualReturnOperationCompleted);
            }
            this.InvokeAsync("TCCUpdateTaxPayerUTIN_AnnualReturn", new object[] {
                        _ds}, this.TCCUpdateTaxPayerUTIN_AnnualReturnOperationCompleted, userState);
        }
        
        private void OnTCCUpdateTaxPayerUTIN_AnnualReturnOperationCompleted(object arg) {
            if ((this.TCCUpdateTaxPayerUTIN_AnnualReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCUpdateTaxPayerUTIN_AnnualReturnCompleted(this, new TCCUpdateTaxPayerUTIN_AnnualReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCGetAnnualReturn_Group", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCGetAnnualReturn_Group(System.Data.DataSet _ds, string StationCode) {
            object[] results = this.Invoke("TCCGetAnnualReturn_Group", new object[] {
                        _ds,
                        StationCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_GroupAsync(System.Data.DataSet _ds, string StationCode) {
            this.TCCGetAnnualReturn_GroupAsync(_ds, StationCode, null);
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_GroupAsync(System.Data.DataSet _ds, string StationCode, object userState) {
            if ((this.TCCGetAnnualReturn_GroupOperationCompleted == null)) {
                this.TCCGetAnnualReturn_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCGetAnnualReturn_GroupOperationCompleted);
            }
            this.InvokeAsync("TCCGetAnnualReturn_Group", new object[] {
                        _ds,
                        StationCode}, this.TCCGetAnnualReturn_GroupOperationCompleted, userState);
        }
        
        private void OnTCCGetAnnualReturn_GroupOperationCompleted(object arg) {
            if ((this.TCCGetAnnualReturn_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCGetAnnualReturn_GroupCompleted(this, new TCCGetAnnualReturn_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCGetAnnualReturn_Group_CheckStatus", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCGetAnnualReturn_Group_CheckStatus(System.Data.DataSet _ds) {
            object[] results = this.Invoke("TCCGetAnnualReturn_Group_CheckStatus", new object[] {
                        _ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_Group_CheckStatusAsync(System.Data.DataSet _ds) {
            this.TCCGetAnnualReturn_Group_CheckStatusAsync(_ds, null);
        }
        
        /// <remarks/>
        public void TCCGetAnnualReturn_Group_CheckStatusAsync(System.Data.DataSet _ds, object userState) {
            if ((this.TCCGetAnnualReturn_Group_CheckStatusOperationCompleted == null)) {
                this.TCCGetAnnualReturn_Group_CheckStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCGetAnnualReturn_Group_CheckStatusOperationCompleted);
            }
            this.InvokeAsync("TCCGetAnnualReturn_Group_CheckStatus", new object[] {
                        _ds}, this.TCCGetAnnualReturn_Group_CheckStatusOperationCompleted, userState);
        }
        
        private void OnTCCGetAnnualReturn_Group_CheckStatusOperationCompleted(object arg) {
            if ((this.TCCGetAnnualReturn_Group_CheckStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCGetAnnualReturn_Group_CheckStatusCompleted(this, new TCCGetAnnualReturn_Group_CheckStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoModificationRequests", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoModificationRequests(string RequestID, string TCCNO, string UTIN, string TCCType, string TaxOffice, int RequestTypeID, string OldValue, string NewValue, string RequestedBy) {
            object[] results = this.Invoke("TCCdoModificationRequests", new object[] {
                        RequestID,
                        TCCNO,
                        UTIN,
                        TCCType,
                        TaxOffice,
                        RequestTypeID,
                        OldValue,
                        NewValue,
                        RequestedBy});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoModificationRequestsAsync(string RequestID, string TCCNO, string UTIN, string TCCType, string TaxOffice, int RequestTypeID, string OldValue, string NewValue, string RequestedBy) {
            this.TCCdoModificationRequestsAsync(RequestID, TCCNO, UTIN, TCCType, TaxOffice, RequestTypeID, OldValue, NewValue, RequestedBy, null);
        }
        
        /// <remarks/>
        public void TCCdoModificationRequestsAsync(string RequestID, string TCCNO, string UTIN, string TCCType, string TaxOffice, int RequestTypeID, string OldValue, string NewValue, string RequestedBy, object userState) {
            if ((this.TCCdoModificationRequestsOperationCompleted == null)) {
                this.TCCdoModificationRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoModificationRequestsOperationCompleted);
            }
            this.InvokeAsync("TCCdoModificationRequests", new object[] {
                        RequestID,
                        TCCNO,
                        UTIN,
                        TCCType,
                        TaxOffice,
                        RequestTypeID,
                        OldValue,
                        NewValue,
                        RequestedBy}, this.TCCdoModificationRequestsOperationCompleted, userState);
        }
        
        private void OnTCCdoModificationRequestsOperationCompleted(object arg) {
            if ((this.TCCdoModificationRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoModificationRequestsCompleted(this, new TCCdoModificationRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TCCdoModificationCheckApproval", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TCCdoModificationCheckApproval(System.Data.DataSet _ds) {
            object[] results = this.Invoke("TCCdoModificationCheckApproval", new object[] {
                        _ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TCCdoModificationCheckApprovalAsync(System.Data.DataSet _ds) {
            this.TCCdoModificationCheckApprovalAsync(_ds, null);
        }
        
        /// <remarks/>
        public void TCCdoModificationCheckApprovalAsync(System.Data.DataSet _ds, object userState) {
            if ((this.TCCdoModificationCheckApprovalOperationCompleted == null)) {
                this.TCCdoModificationCheckApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTCCdoModificationCheckApprovalOperationCompleted);
            }
            this.InvokeAsync("TCCdoModificationCheckApproval", new object[] {
                        _ds}, this.TCCdoModificationCheckApprovalOperationCompleted, userState);
        }
        
        private void OnTCCdoModificationCheckApprovalOperationCompleted(object arg) {
            if ((this.TCCdoModificationCheckApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TCCdoModificationCheckApprovalCompleted(this, new TCCdoModificationCheckApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TccAssessmentUpload", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TccAssessmentUpload(System.Data.DataSet ds) {
            object[] results = this.Invoke("TccAssessmentUpload", new object[] {
                        ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TccAssessmentUploadAsync(System.Data.DataSet ds) {
            this.TccAssessmentUploadAsync(ds, null);
        }
        
        /// <remarks/>
        public void TccAssessmentUploadAsync(System.Data.DataSet ds, object userState) {
            if ((this.TccAssessmentUploadOperationCompleted == null)) {
                this.TccAssessmentUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTccAssessmentUploadOperationCompleted);
            }
            this.InvokeAsync("TccAssessmentUpload", new object[] {
                        ds}, this.TccAssessmentUploadOperationCompleted, userState);
        }
        
        private void OnTccAssessmentUploadOperationCompleted(object arg) {
            if ((this.TccAssessmentUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TccAssessmentUploadCompleted(this, new TccAssessmentUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DelistUpdate", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DelistUpdate(System.Data.DataSet ds) {
            object[] results = this.Invoke("DelistUpdate", new object[] {
                        ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DelistUpdateAsync(System.Data.DataSet ds) {
            this.DelistUpdateAsync(ds, null);
        }
        
        /// <remarks/>
        public void DelistUpdateAsync(System.Data.DataSet ds, object userState) {
            if ((this.DelistUpdateOperationCompleted == null)) {
                this.DelistUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelistUpdateOperationCompleted);
            }
            this.InvokeAsync("DelistUpdate", new object[] {
                        ds}, this.DelistUpdateOperationCompleted, userState);
        }
        
        private void OnDelistUpdateOperationCompleted(object arg) {
            if ((this.DelistUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelistUpdateCompleted(this, new DelistUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CollectionTransferCompletedEventHandler(object sender, CollectionTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CollectionTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CollectionTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataCompletedEventHandler(object sender, DownloadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataUpdateCompletedEventHandler(object sender, DownloadDataUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataTaxSmartCompletedEventHandler(object sender, DownloadDataTaxSmartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataTaxSmartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataTaxSmartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadDataUpdateTaxSmartCompletedEventHandler(object sender, DownloadDataUpdateTaxSmartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDataUpdateTaxSmartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDataUpdateTaxSmartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TaxPayerUploadDataCompletedEventHandler(object sender, TaxPayerUploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaxPayerUploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaxPayerUploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TaxAgentUploadDataCompletedEventHandler(object sender, TaxAgentUploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaxAgentUploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaxAgentUploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPaymentInfoCompletedEventHandler(object sender, GetPaymentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPaymentInfo2CompletedEventHandler(object sender, GetPaymentInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TccReverseCompletedEventHandler(object sender, TccReverseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TccReverseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TccReverseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateUtinCompletedEventHandler(object sender, ValidateUtinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUtinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUtinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TccAdvancePaymentCompletedEventHandler(object sender, TccAdvancePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TccAdvancePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TccAdvancePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FetchPaymentForPAYENormalisationCompletedEventHandler(object sender, FetchPaymentForPAYENormalisationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchPaymentForPAYENormalisationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchPaymentForPAYENormalisationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadTaxAgentPaymentHistoryCompletedEventHandler(object sender, UploadTaxAgentPaymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadTaxAgentPaymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTaxAgentPaymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadTaxAgentAnnualReturnCompletedEventHandler(object sender, UploadTaxAgentAnnualReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadTaxAgentAnnualReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTaxAgentAnnualReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PAYEPaymentBreakDownCompletedEventHandler(object sender, PAYEPaymentBreakDownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PAYEPaymentBreakDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PAYEPaymentBreakDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PAYEReverseBreakDownCompletedEventHandler(object sender, PAYEReverseBreakDownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PAYEReverseBreakDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PAYEReverseBreakDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PAYEReverseTaxAgentPaymentHistoryCompletedEventHandler(object sender, PAYEReverseTaxAgentPaymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PAYEReverseTaxAgentPaymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PAYEReverseTaxAgentPaymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PAYEReverseTaxAgentNormalisationCompletedEventHandler(object sender, PAYEReverseTaxAgentNormalisationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PAYEReverseTaxAgentNormalisationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PAYEReverseTaxAgentNormalisationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTaxAgentAnnualReturnCompletedEventHandler(object sender, GetTaxAgentAnnualReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaxAgentAnnualReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaxAgentAnnualReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoFetchPaymentCompletedEventHandler(object sender, TCCdoFetchPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoFetchPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoFetchPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoNormalizationCompletedEventHandler(object sender, TCCdoNormalizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoNormalizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoNormalizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoTransactionLogCompletedEventHandler(object sender, TCCdoTransactionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoTransactionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoTransactionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoTransactionLogReversalCompletedEventHandler(object sender, TCCdoTransactionLogReversalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoTransactionLogReversalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoTransactionLogReversalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoFetchForNormalizationCompletedEventHandler(object sender, TCCdoFetchForNormalizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoFetchForNormalizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoFetchForNormalizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TccdoPaymentNormalisationReversalCompletedEventHandler(object sender, TccdoPaymentNormalisationReversalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TccdoPaymentNormalisationReversalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TccdoPaymentNormalisationReversalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoSubstitutionFetchCompletedEventHandler(object sender, TCCdoSubstitutionFetchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoSubstitutionFetchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoSubstitutionFetchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoReversalrequestLogCompletedEventHandler(object sender, TCCdoReversalrequestLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoReversalrequestLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoReversalrequestLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoCheckApprovalStatusCompletedEventHandler(object sender, TCCdoCheckApprovalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoCheckApprovalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoCheckApprovalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoCheckApprovalStatus_UpdateCompletedEventHandler(object sender, TCCdoCheckApprovalStatus_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoCheckApprovalStatus_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoCheckApprovalStatus_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoCheckReversalRequestApprovalStatusCompletedEventHandler(object sender, TCCdoCheckReversalRequestApprovalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoCheckReversalRequestApprovalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoCheckReversalRequestApprovalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoCheckReversalRequestApprovalStatus_UpdateCompletedEventHandler(object sender, TCCdoCheckReversalRequestApprovalStatus_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoCheckReversalRequestApprovalStatus_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoCheckReversalRequestApprovalStatus_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTaxAgentCompletedEventHandler(object sender, GetTaxAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaxAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaxAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTaxPAYE_SINGLECompletedEventHandler(object sender, GetTaxPAYE_SINGLECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaxPAYE_SINGLECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaxPAYE_SINGLECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTaxPAYECompletedEventHandler(object sender, GetTaxPAYECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaxPAYECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaxPAYECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTaxPAYE_UpdateCompletedEventHandler(object sender, GetTaxPAYE_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaxPAYE_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaxPAYE_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCGetAnnualReturn_TaxAgent_SINGLECompletedEventHandler(object sender, TCCGetAnnualReturn_TaxAgent_SINGLECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCGetAnnualReturn_TaxAgent_SINGLECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCGetAnnualReturn_TaxAgent_SINGLECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCGetAnnualReturn_TaxAgent_ALLCompletedEventHandler(object sender, TCCGetAnnualReturn_TaxAgent_ALLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCGetAnnualReturn_TaxAgent_ALLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCGetAnnualReturn_TaxAgent_ALLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompletedEventHandler(object sender, TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCGetAnnualReturn_TaxAgent_ALL_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCUpdateTaxPayerUTIN_AnnualReturnCompletedEventHandler(object sender, TCCUpdateTaxPayerUTIN_AnnualReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCUpdateTaxPayerUTIN_AnnualReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCUpdateTaxPayerUTIN_AnnualReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCGetAnnualReturn_GroupCompletedEventHandler(object sender, TCCGetAnnualReturn_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCGetAnnualReturn_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCGetAnnualReturn_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCGetAnnualReturn_Group_CheckStatusCompletedEventHandler(object sender, TCCGetAnnualReturn_Group_CheckStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCGetAnnualReturn_Group_CheckStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCGetAnnualReturn_Group_CheckStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoModificationRequestsCompletedEventHandler(object sender, TCCdoModificationRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoModificationRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoModificationRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TCCdoModificationCheckApprovalCompletedEventHandler(object sender, TCCdoModificationCheckApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TCCdoModificationCheckApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TCCdoModificationCheckApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TccAssessmentUploadCompletedEventHandler(object sender, TccAssessmentUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TccAssessmentUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TccAssessmentUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DelistUpdateCompletedEventHandler(object sender, DelistUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelistUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelistUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591