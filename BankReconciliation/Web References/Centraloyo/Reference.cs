//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BankReconciliation.Centraloyo {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CollectionManagerSoap", Namespace="http://microsoft.com/webservices/")]
    public partial class CollectionManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback TccUploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaxPayerUploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback TccReverseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUtinOperationCompleted;
        
        private System.Threading.SendOrPostCallback TccAdvancePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCollectionBreakDownOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelistFetchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelistUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReconcilliationReclassificationRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReconcilliationReclassificationCheckApprovedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CollectionManager() {
            this.Url = global::BankReconciliation.Properties.Settings.Default.BankReconciliation_Centraloyo_CollectionManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadDataCompletedEventHandler UploadDataCompleted;
        
        /// <remarks/>
        public event TccUploadDataCompletedEventHandler TccUploadDataCompleted;
        
        /// <remarks/>
        public event TaxPayerUploadDataCompletedEventHandler TaxPayerUploadDataCompleted;
        
        /// <remarks/>
        public event GetPaymentInfoCompletedEventHandler GetPaymentInfoCompleted;
        
        /// <remarks/>
        public event GetPaymentInfo2CompletedEventHandler GetPaymentInfo2Completed;
        
        /// <remarks/>
        public event TccReverseCompletedEventHandler TccReverseCompleted;
        
        /// <remarks/>
        public event ValidateUtinCompletedEventHandler ValidateUtinCompleted;
        
        /// <remarks/>
        public event TccAdvancePaymentCompletedEventHandler TccAdvancePaymentCompleted;
        
        /// <remarks/>
        public event GetCollectionBreakDownCompletedEventHandler GetCollectionBreakDownCompleted;
        
        /// <remarks/>
        public event DelistFetchCompletedEventHandler DelistFetchCompleted;
        
        /// <remarks/>
        public event DelistUpdateCompletedEventHandler DelistUpdateCompleted;
        
        /// <remarks/>
        public event ReconcilliationReclassificationRequestsCompletedEventHandler ReconcilliationReclassificationRequestsCompleted;
        
        /// <remarks/>
        public event ReconcilliationReclassificationCheckApprovedCompletedEventHandler ReconcilliationReclassificationCheckApprovedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UploadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UploadData(System.Data.DataSet dataSet, string UCC, string PCC) {
            object[] results = this.Invoke("UploadData", new object[] {
                        dataSet,
                        UCC,
                        PCC});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDataAsync(System.Data.DataSet dataSet, string UCC, string PCC) {
            this.UploadDataAsync(dataSet, UCC, PCC, null);
        }
        
        /// <remarks/>
        public void UploadDataAsync(System.Data.DataSet dataSet, string UCC, string PCC, object userState) {
            if ((this.UploadDataOperationCompleted == null)) {
                this.UploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDataOperationCompleted);
            }
            this.InvokeAsync("UploadData", new object[] {
                        dataSet,
                        UCC,
                        PCC}, this.UploadDataOperationCompleted, userState);
        }
        
        private void OnUploadDataOperationCompleted(object arg) {
            if ((this.UploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDataCompleted(this, new UploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TccUploadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TccUploadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("TccUploadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TccUploadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.TccUploadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void TccUploadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.TccUploadDataOperationCompleted == null)) {
                this.TccUploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTccUploadDataOperationCompleted);
            }
            this.InvokeAsync("TccUploadData", new object[] {
                        dataSet,
                        statecode}, this.TccUploadDataOperationCompleted, userState);
        }
        
        private void OnTccUploadDataOperationCompleted(object arg) {
            if ((this.TccUploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TccUploadDataCompleted(this, new TccUploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TaxPayerUploadData", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TaxPayerUploadData(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("TaxPayerUploadData", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TaxPayerUploadDataAsync(System.Data.DataSet dataSet, string statecode) {
            this.TaxPayerUploadDataAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void TaxPayerUploadDataAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.TaxPayerUploadDataOperationCompleted == null)) {
                this.TaxPayerUploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaxPayerUploadDataOperationCompleted);
            }
            this.InvokeAsync("TaxPayerUploadData", new object[] {
                        dataSet,
                        statecode}, this.TaxPayerUploadDataOperationCompleted, userState);
        }
        
        private void OnTaxPayerUploadDataOperationCompleted(object arg) {
            if ((this.TaxPayerUploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaxPayerUploadDataCompleted(this, new TaxPayerUploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetPaymentInfo", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentInfo(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string userid) {
            object[] results = this.Invoke("GetPaymentInfo", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        userid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentInfoAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string userid) {
            this.GetPaymentInfoAsync(dataSet, statecode, username, password, keyword, taxPayerType, userid, null);
        }
        
        /// <remarks/>
        public void GetPaymentInfoAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string userid, object userState) {
            if ((this.GetPaymentInfoOperationCompleted == null)) {
                this.GetPaymentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentInfoOperationCompleted);
            }
            this.InvokeAsync("GetPaymentInfo", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        userid}, this.GetPaymentInfoOperationCompleted, userState);
        }
        
        private void OnGetPaymentInfoOperationCompleted(object arg) {
            if ((this.GetPaymentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentInfoCompleted(this, new GetPaymentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetPaymentInfo2", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentInfo2(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string localusername, string Consultantid) {
            object[] results = this.Invoke("GetPaymentInfo2", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        localusername,
                        Consultantid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentInfo2Async(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string localusername, string Consultantid) {
            this.GetPaymentInfo2Async(dataSet, statecode, username, password, keyword, taxPayerType, localusername, Consultantid, null);
        }
        
        /// <remarks/>
        public void GetPaymentInfo2Async(System.Data.DataSet dataSet, string statecode, string username, string password, string keyword, string taxPayerType, string localusername, string Consultantid, object userState) {
            if ((this.GetPaymentInfo2OperationCompleted == null)) {
                this.GetPaymentInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentInfo2OperationCompleted);
            }
            this.InvokeAsync("GetPaymentInfo2", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        keyword,
                        taxPayerType,
                        localusername,
                        Consultantid}, this.GetPaymentInfo2OperationCompleted, userState);
        }
        
        private void OnGetPaymentInfo2OperationCompleted(object arg) {
            if ((this.GetPaymentInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentInfo2Completed(this, new GetPaymentInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TccReverse", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TccReverse(System.Data.DataSet dataSet, string statecode, string username, string password, string consultantid, string reversaltype, string localusername) {
            object[] results = this.Invoke("TccReverse", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        consultantid,
                        reversaltype,
                        localusername});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TccReverseAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string consultantid, string reversaltype, string localusername) {
            this.TccReverseAsync(dataSet, statecode, username, password, consultantid, reversaltype, localusername, null);
        }
        
        /// <remarks/>
        public void TccReverseAsync(System.Data.DataSet dataSet, string statecode, string username, string password, string consultantid, string reversaltype, string localusername, object userState) {
            if ((this.TccReverseOperationCompleted == null)) {
                this.TccReverseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTccReverseOperationCompleted);
            }
            this.InvokeAsync("TccReverse", new object[] {
                        dataSet,
                        statecode,
                        username,
                        password,
                        consultantid,
                        reversaltype,
                        localusername}, this.TccReverseOperationCompleted, userState);
        }
        
        private void OnTccReverseOperationCompleted(object arg) {
            if ((this.TccReverseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TccReverseCompleted(this, new TccReverseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/ValidateUtin", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateUtin(string UTIN, string statecode, string PayerType, string TccNo) {
            object[] results = this.Invoke("ValidateUtin", new object[] {
                        UTIN,
                        statecode,
                        PayerType,
                        TccNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUtinAsync(string UTIN, string statecode, string PayerType, string TccNo) {
            this.ValidateUtinAsync(UTIN, statecode, PayerType, TccNo, null);
        }
        
        /// <remarks/>
        public void ValidateUtinAsync(string UTIN, string statecode, string PayerType, string TccNo, object userState) {
            if ((this.ValidateUtinOperationCompleted == null)) {
                this.ValidateUtinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUtinOperationCompleted);
            }
            this.InvokeAsync("ValidateUtin", new object[] {
                        UTIN,
                        statecode,
                        PayerType,
                        TccNo}, this.ValidateUtinOperationCompleted, userState);
        }
        
        private void OnValidateUtinOperationCompleted(object arg) {
            if ((this.ValidateUtinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUtinCompleted(this, new ValidateUtinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/TccAdvancePayment", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TccAdvancePayment(System.Data.DataSet dataSet, string statecode) {
            object[] results = this.Invoke("TccAdvancePayment", new object[] {
                        dataSet,
                        statecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TccAdvancePaymentAsync(System.Data.DataSet dataSet, string statecode) {
            this.TccAdvancePaymentAsync(dataSet, statecode, null);
        }
        
        /// <remarks/>
        public void TccAdvancePaymentAsync(System.Data.DataSet dataSet, string statecode, object userState) {
            if ((this.TccAdvancePaymentOperationCompleted == null)) {
                this.TccAdvancePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTccAdvancePaymentOperationCompleted);
            }
            this.InvokeAsync("TccAdvancePayment", new object[] {
                        dataSet,
                        statecode}, this.TccAdvancePaymentOperationCompleted, userState);
        }
        
        private void OnTccAdvancePaymentOperationCompleted(object arg) {
            if ((this.TccAdvancePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TccAdvancePaymentCompleted(this, new TccAdvancePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetCollectionBreakDown", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCollectionBreakDown(string PaymentRefNumber, string RevCode) {
            object[] results = this.Invoke("GetCollectionBreakDown", new object[] {
                        PaymentRefNumber,
                        RevCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCollectionBreakDownAsync(string PaymentRefNumber, string RevCode) {
            this.GetCollectionBreakDownAsync(PaymentRefNumber, RevCode, null);
        }
        
        /// <remarks/>
        public void GetCollectionBreakDownAsync(string PaymentRefNumber, string RevCode, object userState) {
            if ((this.GetCollectionBreakDownOperationCompleted == null)) {
                this.GetCollectionBreakDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollectionBreakDownOperationCompleted);
            }
            this.InvokeAsync("GetCollectionBreakDown", new object[] {
                        PaymentRefNumber,
                        RevCode}, this.GetCollectionBreakDownOperationCompleted, userState);
        }
        
        private void OnGetCollectionBreakDownOperationCompleted(object arg) {
            if ((this.GetCollectionBreakDownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollectionBreakDownCompleted(this, new GetCollectionBreakDownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DelistFetch", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DelistFetch(string payref) {
            object[] results = this.Invoke("DelistFetch", new object[] {
                        payref});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DelistFetchAsync(string payref) {
            this.DelistFetchAsync(payref, null);
        }
        
        /// <remarks/>
        public void DelistFetchAsync(string payref, object userState) {
            if ((this.DelistFetchOperationCompleted == null)) {
                this.DelistFetchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelistFetchOperationCompleted);
            }
            this.InvokeAsync("DelistFetch", new object[] {
                        payref}, this.DelistFetchOperationCompleted, userState);
        }
        
        private void OnDelistFetchOperationCompleted(object arg) {
            if ((this.DelistFetchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelistFetchCompleted(this, new DelistFetchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DelistUpdate", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DelistUpdate(System.Data.DataSet ds) {
            object[] results = this.Invoke("DelistUpdate", new object[] {
                        ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DelistUpdateAsync(System.Data.DataSet ds) {
            this.DelistUpdateAsync(ds, null);
        }
        
        /// <remarks/>
        public void DelistUpdateAsync(System.Data.DataSet ds, object userState) {
            if ((this.DelistUpdateOperationCompleted == null)) {
                this.DelistUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelistUpdateOperationCompleted);
            }
            this.InvokeAsync("DelistUpdate", new object[] {
                        ds}, this.DelistUpdateOperationCompleted, userState);
        }
        
        private void OnDelistUpdateOperationCompleted(object arg) {
            if ((this.DelistUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelistUpdateCompleted(this, new DelistUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/ReconcilliationReclassificationRequests", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReconcilliationReclassificationRequests(System.Data.DataSet dataSet) {
            object[] results = this.Invoke("ReconcilliationReclassificationRequests", new object[] {
                        dataSet});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReconcilliationReclassificationRequestsAsync(System.Data.DataSet dataSet) {
            this.ReconcilliationReclassificationRequestsAsync(dataSet, null);
        }
        
        /// <remarks/>
        public void ReconcilliationReclassificationRequestsAsync(System.Data.DataSet dataSet, object userState) {
            if ((this.ReconcilliationReclassificationRequestsOperationCompleted == null)) {
                this.ReconcilliationReclassificationRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReconcilliationReclassificationRequestsOperationCompleted);
            }
            this.InvokeAsync("ReconcilliationReclassificationRequests", new object[] {
                        dataSet}, this.ReconcilliationReclassificationRequestsOperationCompleted, userState);
        }
        
        private void OnReconcilliationReclassificationRequestsOperationCompleted(object arg) {
            if ((this.ReconcilliationReclassificationRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReconcilliationReclassificationRequestsCompleted(this, new ReconcilliationReclassificationRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/ReconcilliationReclassificationCheckApproved", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReconcilliationReclassificationCheckApproved(System.Data.DataSet dataSet) {
            object[] results = this.Invoke("ReconcilliationReclassificationCheckApproved", new object[] {
                        dataSet});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReconcilliationReclassificationCheckApprovedAsync(System.Data.DataSet dataSet) {
            this.ReconcilliationReclassificationCheckApprovedAsync(dataSet, null);
        }
        
        /// <remarks/>
        public void ReconcilliationReclassificationCheckApprovedAsync(System.Data.DataSet dataSet, object userState) {
            if ((this.ReconcilliationReclassificationCheckApprovedOperationCompleted == null)) {
                this.ReconcilliationReclassificationCheckApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReconcilliationReclassificationCheckApprovedOperationCompleted);
            }
            this.InvokeAsync("ReconcilliationReclassificationCheckApproved", new object[] {
                        dataSet}, this.ReconcilliationReclassificationCheckApprovedOperationCompleted, userState);
        }
        
        private void OnReconcilliationReclassificationCheckApprovedOperationCompleted(object arg) {
            if ((this.ReconcilliationReclassificationCheckApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReconcilliationReclassificationCheckApprovedCompleted(this, new ReconcilliationReclassificationCheckApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UploadDataCompletedEventHandler(object sender, UploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TccUploadDataCompletedEventHandler(object sender, TccUploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TccUploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TccUploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TaxPayerUploadDataCompletedEventHandler(object sender, TaxPayerUploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaxPayerUploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaxPayerUploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPaymentInfoCompletedEventHandler(object sender, GetPaymentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPaymentInfo2CompletedEventHandler(object sender, GetPaymentInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TccReverseCompletedEventHandler(object sender, TccReverseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TccReverseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TccReverseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ValidateUtinCompletedEventHandler(object sender, ValidateUtinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUtinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUtinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TccAdvancePaymentCompletedEventHandler(object sender, TccAdvancePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TccAdvancePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TccAdvancePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCollectionBreakDownCompletedEventHandler(object sender, GetCollectionBreakDownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCollectionBreakDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCollectionBreakDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DelistFetchCompletedEventHandler(object sender, DelistFetchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelistFetchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelistFetchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DelistUpdateCompletedEventHandler(object sender, DelistUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelistUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelistUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReconcilliationReclassificationRequestsCompletedEventHandler(object sender, ReconcilliationReclassificationRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReconcilliationReclassificationRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReconcilliationReclassificationRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReconcilliationReclassificationCheckApprovedCompletedEventHandler(object sender, ReconcilliationReclassificationCheckApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReconcilliationReclassificationCheckApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReconcilliationReclassificationCheckApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591